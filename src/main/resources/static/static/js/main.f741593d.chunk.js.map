{"version":3,"sources":["Models/UserModel.ts","reportWebVitals.ts","Redux/AuthState.ts","Redux/Store.ts","Assets/Images/coupFunIcon.png","Components/SharedArea/Logo/Logo.tsx","Components/SharedArea/CardArea/UserCard/UserCard.tsx","Services/Notification.ts","Components/AuthArea/Logout/Logout.tsx","Components/MenuArea/AdminMenu/AdminMenu.tsx","Components/MenuArea/CustomerMenu/CustomerMenu.tsx","Components/MenuArea/CompanyMenu/CompanyMenu.tsx","Components/LayoutArea/Header/Header.tsx","Components/LayoutArea/Footer/Footer.tsx","Services/JwtAxios.ts","Services/Globals.ts","Components/UserArea/AdminArea/CompaniesTable/CompaniesTable.tsx","Components/UserArea/AdminArea/CustomersTable/CustomersTable.tsx","Components/AuthArea/Login/Login.tsx","Components/HomeArea/Home/Home.tsx","Components/SharedArea/Page404/Page404.tsx","Components/UserArea/CompanyArea/AddCoupon/AddCoupon.tsx","Components/UserArea/CompanyArea/UpdateCoupon/UpdateCoupon.tsx","Components/UserArea/CompanyArea/CouponsTable/CouponsTable.tsx","Components/UserArea/CustomerArea/CouponsTable/AllCouponsTable.tsx","Components/UserArea/CustomerArea/CustomerCouponsTable/CustomerCouponsTable.tsx","Components/SharedArea/CardArea/CouponCard/CouponCard.tsx","Components/SharedArea/CardArea/CompanyCard/CompanyCard.tsx","Components/SharedArea/CardArea/CustomerCard/CustomerCard.tsx","Components/LayoutArea/Routing/Routing.tsx","Components/LayoutArea/Layout/Layout.tsx","index.tsx"],"names":["UserType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserModel","id","email","name","password","token","userType","AuthActionType","AuthState","user","loginAction","type","LOGIN","payload","reducers","combineReducers","currentState","action","newState","sessionStorage","setItem","JSON","stringify","console","log","LOGOUT","localStorage","removeItem","store","createStore","Logo","styleClass","makeStyles","theme","createStyles","xSmall","width","spacing","height","small","medium","large","xLarge","useStyles","Toolbar","className","to","Typography","variant","Avatar","src","coupFunLogo","alt","UserCard","props","state","getState","this","setState","err","alert","message","whatTimeIsIt","Component","timeOfDay","Date","getHours","notify","notification","Notyf","duration","position","x","y","success","extractMessage","error","response","data","Array","isArray","Logout","logout","dispatch","history","push","useHistory","Button","endIcon","icon","faSignOutAlt","onClick","AdminMenu","useState","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","CustomerMenu","style","color","CompanyMenu","Header","setUser","useEffect","subscribe","ADMIN","COMPANY","CUSTOMER","Footer","jwtAxios","axios","create","interceptors","request","use","headers","Globals","DevelopmentGoals","urls","loginAdmin","loginCompany","loginCustomer","getAllCompanies","addCompany","updateCompany","deleteCompany","getAllCustomers","addCustomer","updateCustomer","deleteCustomer","getCompanyCoupons","getCompanyCouponsByCategory","getCompanyCouponsByMaxPrice","addCoupon","updateCoupon","deleteCoupon","getAllCoupons","purchaseCoupon","getCustomerCoupons","getCustomerCouponsByCategory","getCustomerCouponsByMaxPrice","getCustomerDetails","getCompanyDetails","getOneCompany","getOneCustomer","getOneCouponCompany","getOneCouponCustomer","getCouponImage","globals","CompaniesTable","onAdd","company","a","post","addedCompany","companies","onEdit","companyNew","companyOld","put","updatedCompany","splice","indexOf","selectedRow","get","delete","onRowClick","evt","row","options","sorting","search","rowStyle","rowData","backgroundColor","localization","body","editRow","deleteText","title","columns","field","editable","onRowAdd","newData","Promise","resolve","reject","onRowUpdate","oldData","onRowDelete","onDelete","React","CustomersTable","customer","addedCustomer","customers","firstName","lastName","customerNew","customerOld","updatedCustomer","deletedCustomer","sort","b","Login","useForm","register","handleSubmit","showPassword","setShowPassword","urlToConnect","styleClasses","root","borderColor","fontFamily","select","textAlign","margin","minWidth","selectOptions","label","Container","onSubmit","TextField","inputRef","required","InputProps","endAdornment","InputAdornment","IconButton","prev","Visibility","VisibilityOff","FormControl","InputLabel","Select","onChange","e","value","target","map","option","Home","Page404","allow","AddCoupon","couponTitle","setCouponTitle","setCouponDescription","couponAmount","setCouponAmount","couponPrice","setCouponPrice","couponStartDate","setCouponStartDate","couponEndDate","setCouponEndDate","setCouponImage","coupon","myCouponData","FormData","append","description","amount","toString","price","category","startDate","endDate","image","minLength","valueOf","replaceAll","helperText","disabled","faCheck","UpdateCoupon","couponToUpdate","couponCategory","couponImage","undefined","errors","imageName","defaultValue","CouponsTable","onShow","tableRef","createRef","addDialog","updateDialog","coupons","deletedCoupon","couponsUpdated","categories","handleCloseAddDialog","handleCloseUpdateDialog","startIcon","faSync","Dialog","Cancel","faPlusSquare","faEdit","editComponent","t","render","accept","multiple","faTags","componentDidMount","getByCategory","faDotCircle","placeholder","getByMaxPrice","Search","AllCouponsTable","onBuy","components","Action","faShoppingCart","CustomerCouponsTable","CouponCard","pic","customerCoupons","match","params","url","responseArray","includes","fontSize","background","component","Link","CompanyCard","CustomerCard","Routing","path","exact","from","createMuiTheme","typography","join","Layout","ThemeProvider","ReactDOM","StrictMode","document","getElementById"],"mappings":"umBAaYA,E,iCCCGC,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,yBDCCQ,E,sCARJC,Q,OACAC,W,OACAC,U,OACAC,c,OACAC,W,OACAC,c,aAMChB,K,cAAAA,E,kBAAAA,E,qBAAAA,M,SEKAiB,E,SAVCC,EAAb,sCACWC,KAAkB,IAAIT,GA4B1B,SAASU,EAAYD,GACxB,MAAO,CAAEE,KAAMJ,EAAeK,MAAOC,QAASJ,I,SApBtCF,K,cAAAA,E,iBAAAA,M,iBCbNO,EAAWC,YAAgB,CAACP,UD4C3B,WAAgG,IAA3EQ,EAA0E,uDAAhD,IAAIR,EAAaS,EAA+B,uCAC/FC,EAAQ,eAAOF,GACrB,OAAQC,EAAON,MAEZ,KAAKJ,EAAeK,MAChBM,EAAST,KAAOQ,EAAOJ,QAEvBM,eAAeC,QAAQ,OAAQC,KAAKC,UAAUJ,EAAST,OACvDc,QAAQC,IAAIP,EAAOJ,SACnB,MACJ,KAAKN,EAAekB,OAChBP,EAAST,KAAO,KAChBiB,aAAaC,WAAW,QAIhC,OAAOT,KCvDQU,EAJDC,YAAYf,GCNX,G,OAAA,IAA0B,yC,4DC2D1BgB,MApDf,WAEI,IAwBMC,EAxBYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,OAAQ,CACJC,MAAOH,EAAMI,QAAQ,GACrBC,OAAQL,EAAMI,QAAQ,IAE1BE,MAAO,CACHH,MAAOH,EAAMI,QAAQ,IACrBC,OAAQL,EAAMI,QAAQ,KAE1BG,OAAQ,CACJJ,MAAOH,EAAMI,QAAQ,IACrBC,OAAQL,EAAMI,QAAQ,KAG1BI,MAAO,CACHL,MAAOH,EAAMI,QAAQ,IACrBC,OAAQL,EAAMI,QAAQ,KAE1BK,OAAQ,CACJN,MAAOH,EAAMI,QAAQ,IACrBC,OAAQL,EAAMI,QAAQ,SAIXM,GAEnB,OAEI,cAACC,EAAA,EAAD,CAASC,UAAU,OAAnB,SACI,eAAC,IAAD,CAASC,GAAG,QAAZ,UAEA,cAACC,EAAA,EAAD,CAAYF,UAAU,gBAAgBG,QAAQ,KAA9C,yBAIA,cAACC,EAAA,EAAD,CAAQJ,UAAWd,EAAWQ,MAAQ,iBAAkBW,IAAKC,EAAaC,IAAI,wB,gDCG3EC,G,yDAnCX,WAAoBC,GAAY,IAAD,8BAC3B,cAAMA,IACDC,MAAQ,CAAC9C,KAAM,MAFO,E,6FAMnC,oFACI,IAEIA,EAAOmB,EAAM4B,WAAWhD,UAAUC,KACxCgD,KAAKC,SAAS,CAACjD,SAEb,MAAOkD,GACHC,MAAM,UAAWD,EAAIE,SAP7B,gD,0EAYA,WACI,OACI,qBAAKhB,UAAU,WAAf,SACL,gCAG+B,IAAjBiB,KAAqB,+CAAiB,uBAAjB,IAAwBL,KAAKF,MAAM9C,KAAKN,QAC5C,IAAjB2D,KAAqB,iDAAmB,uBAAML,KAAKF,MAAM9C,KAAKN,QAC7C,IAAjB2D,KAAqB,mDAAqB,uBAAML,KAAKF,MAAM9C,KAAKN,QAC/C,IAAjB2D,KAAqB,gDAAkB,uBAAlB,IAAyBL,KAAKF,MAAM9C,KAAKN,iB,GA7BxD4D,cAuCvB,SAASD,IACL,IACIE,GADQ,IAAIC,MACYC,WAC5B,QAAQ,GACJ,KAAMF,EAAU,EACZ,OAAO,EAEX,KAAMA,EAAU,GACZ,OAAO,EAGX,KAAMA,EAAU,GACZ,OAAO,EAGX,KAAMA,EAAU,GACZ,OAAO,EAGX,QACI,OAAO,G,uECjCJG,EAFA,I,iDA7BHC,aAAe,IAAIC,IAAM,CAACC,SAAU,IAAMC,SAAS,CAACC,EAAG,QAASC,EAAE,Y,2CAE1E,SAAeZ,GACXJ,KAAKW,aAAaM,QAAQb,K,mBAG9B,SAAaF,GACT,IAAME,EAAUJ,KAAKkB,eAAehB,GACpCF,KAAKW,aAAaQ,MAAMf,K,4BAG5B,SAAuBF,GAAmB,IAAD,IACrC,MAAiB,kBAANA,EACAA,EAGsB,kBAA7B,OAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAKkB,gBAAZ,aAAO,EAAeC,MACfnB,EAAIkB,SAASC,KAEpBC,MAAMC,QAAN,OAAcrB,QAAd,IAAcA,GAAd,UAAcA,EAAKkB,gBAAnB,aAAc,EAAeC,MACtBnB,EAAIkB,SAASC,KAAK,GAEH,kBAAtB,OAAOnB,QAAP,IAAOA,OAAP,EAAOA,EAAKE,SACLF,EAAIE,QAER,4C,aCPAoB,MAbf,WAEI,SAASC,IACLf,EAAOO,QAAQ,4CACf9C,EAAMuD,SN4BH,CAAExE,KAAMJ,EAAekB,SM3B1B2D,EAAQC,KAAK,SAIjB,IAAMD,EAAUE,cAChB,OAAO,cAACC,EAAA,EAAD,CAAQ1C,UAAW,SAAS2C,QAAS,cAAC,IAAD,CAAiBC,KAAMC,MAAiBC,QAAS,kBAAKT,KAA3F,qB,OCdI,SAASU,IACtB,MAAgCC,mBAA6B,MAA7D,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAc,WAClBD,EAAY,OAGd,OACE,sBAAKlD,UAAU,YAAf,UACE,cAAC0C,EAAA,EAAD,CACEU,gBAAc,cACdC,gBAAc,OACdP,QAbc,SAACQ,GACnBJ,EAAYI,EAAMC,gBAShB,uBAOA,eAACC,EAAA,EAAD,CACEpG,GAAG,cACH6F,SAAUA,EACVQ,aAAW,EACXC,KAAMC,QAAQV,GACdW,QAAST,EALX,UAOE,eAACU,EAAA,EAAD,CAAUf,QAASK,EAAnB,UACG,IACD,cAAC,IAAD,CAASlD,GAAG,yBAAZ,0BAEF,cAAC4D,EAAA,EAAD,CAAUf,QAASK,EAAnB,SACE,+BACE,cAAC,IAAD,CAASlD,GAAG,yBAAZ,2BAGJ,cAAC4D,EAAA,EAAD,CAAUf,QAASK,EAAnB,SAAiC,cAAC,EAAD,Y,OCpC1B,SAASW,IACtB,MAAgCd,mBAA6B,MAA7D,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAc,WAClBD,EAAY,OAGd,OACE,sBAAKlD,UAAU,eAAf,UACE,cAAC0C,EAAA,EAAD,CACEU,gBAAc,cACdC,gBAAc,OACdP,QAbc,SAACQ,GACnBJ,EAAYI,EAAMC,gBAShB,uBAOA,eAACC,EAAA,EAAD,CACEO,MAAO,CACLC,MAAO,gBAET5G,GAAG,cACH6F,SAAUA,EACVQ,aAAW,EACXC,KAAMC,QAAQV,GACdW,QAAST,EARX,UAUE,eAACU,EAAA,EAAD,CAAUf,QAASK,EAAnB,UACG,IACD,cAAC,IAAD,CAASlD,GAAG,4BAAZ,iCAEF,cAAC4D,EAAA,EAAD,CAAUf,QAASK,EAAnB,SACE,cAAC,IAAD,CAASlD,GAAG,iCAAZ,0BAEF,cAAC4D,EAAA,EAAD,CAAUf,QAASK,EAAnB,SACE,cAAC,IAAD,CAASlD,GAAG,iBAAZ,0BAEF,cAAC4D,EAAA,EAAD,CAAUf,QAASK,EAAnB,SAAiC,cAAC,EAAD,Y,OCxC1B,SAASc,IACtB,MAAgCjB,mBAA6B,MAA7D,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAc,WAClBD,EAAY,OAGd,OACE,sBAAKlD,UAAU,cAAf,UACE,cAAC0C,EAAA,EAAD,CACEU,gBAAc,cACdC,gBAAc,OACdP,QAbc,SAACQ,GACnBJ,EAAYI,EAAMC,gBAShB,uBAOA,eAACC,EAAA,EAAD,CACEpG,GAAG,cACH6F,SAAUA,EACVQ,aAAW,EACXC,KAAMC,QAAQV,GACdW,QAAST,EALX,UAOE,eAACU,EAAA,EAAD,CAAUf,QAASK,EAAnB,UACG,IACD,cAAC,IAAD,CAASlD,GAAG,yBAAZ,wBAEF,cAAC4D,EAAA,EAAD,CAAUf,QAASK,EAAnB,SACE,cAAC,IAAD,CAASlD,GAAG,eAAZ,+BAEF,cAAC4D,EAAA,EAAD,CAAUf,QAASK,EAAnB,SAAiC,cAAC,EAAD,YCO1Be,MAlCf,WAEI,MAAwBlB,qBAAxB,mBAAOpF,EAAP,KAAauG,EAAb,KAQI,OAPJC,qBAAU,WACNrF,EAAMsF,WAAU,kBAChBF,EAAQpF,EAAM4B,WAAWhD,UAAUC,WAEpC,IAIK,sBAAKoC,UAAU,SAAf,UACI,gDACA,mFAGA,sBACAA,UAAU,WADV,SAECpC,GAAQ,cAAC,EAAD,MAGJ,cAAC,EAAD,IAEL,uBACAoC,UAAU,OADV,UAEGpC,GAAQA,EAAKH,WAAWhB,EAAS6H,OAAS,cAAC,EAAD,IAC1C1G,GAAQA,EAAKH,WAAWhB,EAAS8H,SAAW,cAAC,EAAD,IAC5C3G,GAAQA,EAAKH,WAAWhB,EAAS+H,UAAY,cAAC,EAAD,W,OC9BjDC,MARf,WACI,OACI,qBAAKzE,UAAU,SAAf,SACL,kF,4CCFG0E,GAAWC,KAAMC,SAGvBF,GAASG,aAAaC,QAAQC,KAAI,SAAAD,GAAY,IAAD,EAMzC,OAJAA,EAAQE,QAAU,CACd,gBAASjG,EAAM4B,WAAWhD,UAAUC,YAApC,aAAS,EAAiCJ,OAGvCsH,KAGIJ,UCdTO,I,0CAKAC,G,4MACKC,KAAO,CACVC,WAAY,2CACZC,aAAc,6CACdC,cAAe,8CACf/H,SAAU,aACVgI,gBAAiB,8CACjBC,WAAY,yCACZC,cAAe,4CACfC,cAAe,gDACfC,gBAAiB,8CACjBC,YAAa,0CACbC,eAAgB,6CAChBC,eAAgB,iDAChBC,kBAAmB,kDACnBC,4BAA6B,sEAC7BC,4BAA6B,mEAC7BC,UAAW,0CACXC,aAAc,6CACdC,aAAc,iDACdC,cAAgB,+CAChBC,eAAgB,gDAChBC,mBAAmB,oDACnBC,6BAA6B,wEAC7BC,6BAA6B,qEAC7BC,mBAAmB,6DACnBC,kBAAmB,kDACnBC,cAAe,gDACfC,eAAgB,iDAChBC,oBAAqB,8CACrBC,qBAAsB,+CACtBC,eAAgB,+B,YA/BO/B,IA2EhBgC,GAFyC,IAAI/B,GCkF7CgC,G,kDA5IX,WAAmBzG,GAA6B,IAAD,8BAC3C,cAAMA,IAgBH0G,MAjBwC,uCAiBhC,WAAOC,GAAP,mBAAAC,EAAA,+EAGgB3C,GAAS4C,KAAmBL,GAAQ9B,KAAKK,WAAY4B,GAHrE,cAGDpF,EAHC,OAIDuF,EAAevF,EAASC,MACxBuF,EALC,YAKe,EAAK9G,MAAM8G,YACvBhF,KAAK+E,GACf,EAAK1G,SAAS,CAAC2G,cACflG,EAAOO,QAAQ,WAAWuF,EAAQ9J,KAAK,gDARhC,kBASAiK,EAAanK,IATb,kCAaPkE,EAAOS,MAAM,UAAU,EAAV,IAbN,0DAjBgC,wDAoCxC0F,OApCwC,uCAoC/B,WAAMC,EAAyBC,GAA/B,mBAAAN,EAAA,+EAEe3C,GAASkD,IAAkBX,GAAQ9B,KAAKM,cAAeiC,GAFtE,OAEF1F,EAFE,OAGF6F,EAAiB7F,EAASC,MAC1BuF,EAJE,YAIc,EAAK9G,MAAM8G,YACvBM,OAAON,EAAUO,QAAQJ,GAAY,GAC/CH,EAAUhF,KAAKqF,GACf,EAAKhH,SAAS,CAAC2G,cACflG,EAAOO,QAAQ,WAAW6F,EAAWpK,KAAK,kCARlC,kDAaRgE,EAAOS,MAAM,UAAU,EAAV,IAbL,0DApC+B,wDAE3C,EAAKrB,MAAQ,CAAC8G,UAAW,GAAIQ,YAAa,MAFC,E,4FAM/C,6GAE+BtD,GAASuD,IAAoBhB,GAAQ9B,KAAKI,iBAFzE,OAEcvD,EAFd,OAGQpB,KAAKC,SAAS,CAAC2G,UAAWxF,EAASC,OAH3C,gDAOQrB,KAAKH,MAAM8B,QAAQC,KAAK,SAPhC,yD,mHAiDA,WAAsB4E,GAAtB,gGAE+B1C,GAASwD,OAAqBjB,GAAQ9B,KAAKO,cAAc0B,EAAQhK,IAFhG,eAGcoK,EAHd,YAG8B5G,KAAKF,MAAM8G,YACvBM,OAAON,EAAUO,QAAQX,GAAS,GAC5C9F,EAAOO,QAAQ,WAAWuF,EAAQ9J,KAAK,oDACvCsD,KAAKC,SAAS,CAAC2G,cANvB,kDAUQlG,EAAOS,MAAM,UAAU,EAAV,IAVrB,0D,2EAgBA,WAA8B,IAAD,OAEzB,OACI,sBAAK/B,UAAU,iBAAf,UAEF,cAAC,IAAD,CACAiC,KAAMrB,KAAKF,MAAM8G,UACjBW,WAAY,SAACC,EAAKC,GACd,EAAKxH,SAAS,CAAEmH,YAAaK,IAC5B,EAAK3H,MAAMsH,cAAcK,GAAK,EAAKxH,SAAS,CAACmH,YAAa,QAE7DM,QAAS,CACLC,SAAS,EACTC,QAAQ,EACRC,SAAU,SAACC,GAAD,MAAc,CACpBC,gBACA,EAAKjI,MAAMsH,cAAgBU,EAAU,UAAY,UAGzDE,aAAc,CAACC,KAAM,CAACC,QAAQ,CAACC,WAAW,8DAC1CC,MAAM,YACNC,QAAS,CACL,CAAED,MAAO,KAAME,MAAO,MACtB,CAAEF,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,QAASE,MAAO,SACzB,CAAEF,MAAO,WAAYE,MAAO,aAIhCC,SAAU,CACNC,SAAU,SAAAC,GAAO,OACjB,IAAIC,SAAc,SAACC,EAASC,GAExB,EAAKrC,MAAMkC,GAEXE,QAGJE,YAAa,SAACJ,EAASK,GAAV,OACb,IAAIJ,SAAc,SAACC,EAASC,GACxB,EAAK/B,OAAO4B,EAASK,GACrBH,QAGJI,YAAa,SAAAD,GAAO,OACpB,IAAIJ,SAAc,SAACC,EAASC,GACxB,EAAKI,SAASF,GACdH,WAIZ,+BAEC3I,KAAKF,MAAMsH,aACR,cAAC,IAAD,CACAhI,UAAY,MACZC,GAAI,gBAAkBW,KAAKF,MAAMsH,YAAY5K,GAF7C,SAGD,cAACsF,EAAA,EAAD,CAAQ1C,UAAU,gBAAlB,qC,GAjIkB6J,aCoIZC,G,kDAlIb,WAAmBrJ,GAA6B,IAAD,8BAC3C,cAAMA,IAcH0G,MAfwC,uCAehC,WAAO4C,GAAP,mBAAA1C,EAAA,+EAEgB3C,GAAS4C,KAAoBL,GAAQ9B,KAAKS,YAAamE,GAFvE,OAED/H,EAFC,OAGDgI,EAAgBhI,EAASC,MACzBgI,EAJC,YAIe,EAAKvJ,MAAMuJ,YACvBzH,KAAKwH,GACf1I,EAAOO,QAAQ,YAAYkI,EAASG,UAAU,IAAIH,EAASI,SAAU,gDACrE,EAAKtJ,SAAS,CAACoJ,cAPR,kDAUP3I,EAAOS,MAAM,UAAU,EAAV,IAVN,0DAfgC,wDA8BxC0F,OA9BwC,uCA8B/B,WAAM2C,EAA2BC,GAAjC,mBAAAhD,EAAA,+EAEe3C,GAASkD,IAAmBX,GAAQ9B,KAAKU,eAAgBuE,GAFxE,OAEFpI,EAFE,OAGFsI,EAAkBtI,EAASC,MAC3BgI,EAJE,YAIc,EAAKvJ,MAAMuJ,YACvBnC,OAAOmC,EAAUlC,QAAQsC,GAAa,GAChDJ,EAAUzH,KAAK8H,GACfhJ,EAAOO,QAAQ,YAAYuI,EAAYF,UAAU,IAAIG,EAAYF,SAAU,kDAC3E,EAAKtJ,SAAS,CAACoJ,cARP,kDAWR3I,EAAOS,MAAM,UAAU,EAAV,IAXL,0DA9B+B,wDAE3C,EAAKrB,MAAQ,CAACuJ,UAAW,GAAIjC,YAAa,MAFC,E,4FAM/C,6GAEmCtD,GAASuD,IAAqBhB,GAAQ9B,KAAKQ,iBAF9E,OAEkB3D,EAFlB,OAGYpB,KAAKC,SAAS,CAACoJ,UAAWjI,EAASC,OAH/C,gDAMQrB,KAAKH,MAAM8B,QAAQC,KAAK,SANhC,yD,mHAuCA,WAAsBuH,GAAtB,oGAE+BrF,GAASwD,OAAsBjB,GAAQ9B,KAAKW,eAAeiE,EAAS3M,IAFnG,OAEc4E,EAFd,OAGcuI,EAAkBvI,EAASC,MAC3BgI,EAJd,YAI8BrJ,KAAKF,MAAMuJ,YACvBnC,OAAOmC,EAAUlC,QAAQwC,GAAiB,GACpDjJ,EAAOO,QAAQ,YAAYkI,EAASG,UAAU,IAAIH,EAASI,SAAU,oDACrEvJ,KAAKC,SAAS,CAACoJ,cAPvB,kDAUQ3I,EAAOS,MAAM,UAAU,EAAV,IAVrB,0D,2EAeA,WAA8B,IAAD,OAKzB,OAHHhD,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS6H,OACrD1D,KAAKH,MAAM8B,QAAQC,KAAK,SAGhB,sBAAKxC,UAAU,iBAAf,UAEF,cAAC,IAAD,CACAmI,WAAY,SAACC,EAAKC,GACd,EAAKxH,SAAS,CAAEmH,YAAaK,IAC5B,EAAK3H,MAAMsH,cAAcK,GAAK,EAAKxH,SAAS,CAACmH,YAAa,QAE7DM,QAAS,CACLC,SAAS,EACTC,QAAQ,EACRC,SAAU,SAACC,GAAD,MAAc,CACpBC,gBACA,EAAKjI,MAAMsH,cAAgBU,EAAU,UAAY,UAGzDE,aAAc,CAACC,KAAM,CAACC,QAAQ,CAACC,WAAW,+DAC1CC,MAAM,YACNC,QAAS,CACL,CAAED,MAAO,KAAME,MAAO,MACtB,CAAEF,MAAO,aAAcE,MAAO,aAC9B,CAAEF,MAAO,YAAaE,MAAO,YAC7B,CAAEF,MAAO,QAASE,MAAO,SACzB,CAAEF,MAAO,WAAYE,MAAO,aAIhCjH,KAAMrB,KAAKF,MAAMuJ,UAAUO,MAAK,SAACnD,EAAEoD,GAAH,OAAOpD,EAAEjK,GAAGqN,EAAErN,MAC9C+L,SAAU,CACNC,SAAU,SAAAC,GAAO,OACjB,IAAIC,SAAc,SAACC,EAASC,GACxB,EAAKrC,MAAMkC,GACXE,QAGJE,YAAa,SAACJ,EAASK,GAAV,OACb,IAAIJ,SAAc,SAACC,EAASC,GACxB,EAAK/B,OAAO4B,EAASK,GACrBH,QAEJI,YAAa,SAAAD,GAAO,OACpB,IAAIJ,SAAc,SAACC,EAASC,GACxB,EAAKI,SAASF,GACdH,WAIN,+BAEP3I,KAAKF,MAAMsH,aACR,cAAC,IAAD,CACAhI,UAAY,MACZC,GAAI,iBAAmBW,KAAKF,MAAMsH,YAAY5K,GAF9C,SAGD,cAACsF,EAAA,EAAD,CAAQ1C,UAAU,iBAAlB,sC,GAvHoB6J,a,2GCoMda,OA7Lf,WAEE,IAAMnI,EAAUE,cAChB,EAAmCkI,eAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAElB,EAAwC7H,oBAAS,GAAjD,mBAAO8H,EAAP,KAAqBC,EAArB,KAL4B,4CAU5B,WAAoBnN,GAApB,iBAAAyJ,EAAA,2DAEUzJ,EAAKH,SAFf,OAGS,UAHT,OAUS,YAVT,OAiBS,aAjBT,6BAIMuN,EACC/D,GAAQ9B,KAAKC,WACZxH,EAAKP,MACL4J,GAAQ9B,KAAK5H,SACbK,EAAKL,SARb,kCAWMyN,EACC/D,GAAQ9B,KAAKE,aACZzH,EAAKP,MACL4J,GAAQ9B,KAAK5H,SACbK,EAAKL,SAfb,kCAkBMyN,EACC/D,GAAQ9B,KAAKG,cACZ1H,EAAKP,MACL4J,GAAQ9B,KAAK5H,SACbK,EAAKL,SAtBb,qDA2B2BoH,KAAM2C,KAAgB0D,EAAcpN,GA3B/D,QA2BUoE,EA3BV,OA4BIjD,EAAMuD,SAASzE,EAAYmE,EAASC,OACnClD,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS6H,OACjD/B,EAAQC,KAAK,yBAEdzD,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS8H,SACjDhC,EAAQC,KAAK,yBAEhBzD,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS+H,UACjDjC,EAAQC,KAAK,kCAEhBzD,EAAM4B,WAAWhD,UAAUC,MAAQ0D,EAAOO,QAAQ,0BACjD9C,EAAM4B,WAAWhD,UAAUC,MAAQ0D,EAAOS,MAAM,qCAvCxD,kDA0CIT,EAAOS,MAAM,iBAAiB,EAAjB,IA1CjB,2DAV4B,sBAuD5B,IA0DMkJ,EA1DY9L,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6L,KAAM,CACJ,4DAA6D,CAC3DC,YAAa,SAEf,kEAAmE,CACjEA,YAAa,WAEf,wEACE,CACEA,YAAa,SAEjB,4BAA6B,CAC3BnH,MAAO,QACPoH,WAAY,sBAGd,+DAAgE,CAC9DpH,MAAO,QACPoH,WAAY,sBAEd,4BAA6B,CAC3BpH,MAAO,QACPoH,WAAY,uBAGhBC,OAAQ,CACN9L,MAAO,MACP+L,UAAW,SACXC,OAAQnM,EAAMI,QAAQ,GACtBgM,SAAU,IACV,4DAA6D,CAC3DL,YAAa,SAEf,kEAAmE,CACjEA,YAAa,WAEf,wEACE,CACEA,YAAa,SAEjB,4BAA6B,CAC3BnH,MAAO,QACPoH,WAAY,sBAGd,+DAAgE,CAC9DpH,MAAO,QACPoH,WAAY,sBAEd,4BAA6B,CAC3BpH,MAAO,QACPoH,WAAY,2BAKCtL,GAEf2L,EAAgB,CACpB,CAAErO,GAAI,EAAGsO,MAAO,QAAS5N,KAAMrB,EAAS6H,OACxC,CAAElH,GAAI,EAAGsO,MAAO,UAAW5N,KAAMrB,EAAS8H,SAC1C,CAAEnH,GAAI,EAAGsO,MAAO,WAAY5N,KAAMrB,EAAS+H,WAG7C,OACE,qBAAKxE,UAAU,YAAf,SACE,eAAC2L,GAAA,EAAD,CAAW3L,UAAU,kBAArB,UACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBACA,uBAAMyL,SAAUf,GA7HM,8CA6HtB,UACE,qBAAK7K,UAAU,kBAAf,SAEE,cAAC6L,GAAA,EAAD,CACEH,MAAM,QACNvL,QAAQ,WACRH,UAAS,UAAKiL,EAAaC,KAAlB,YACTY,SAAUlB,EAAS,CAAEmB,UAAU,IAC/BjO,KAAK,QACLR,KAAK,YAGT,qBAAK0C,UAAU,qBAAf,SAEE,cAAC6L,GAAA,EAAD,CACEH,MAAM,WACNvL,QAAQ,WACRH,UAAS,UAAKiL,EAAaC,KAAlB,YACTY,SAAUlB,EAAS,CAAEmB,UAAU,IAC/BjO,KAAOgN,EAA4B,OAAb,WACtBxN,KAAK,WACL0O,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBxK,SAAS,MAAzB,SACE,cAACyK,GAAA,EAAD,CACEpI,MAAO,CAAEC,MAAO,SAChBlB,QAjJY,WAC9BiI,GAAgB,SAACqB,GAAD,OAAWA,MA8IX,SAIItB,EAAmC,cAACuB,GAAA,EAAD,IAApB,cAACC,GAAA,EAAD,aAO7B,qBAAKtM,UAAU,sBAAf,SACE,eAACuM,GAAA,EAAD,CAAapM,QAAQ,WAAWH,UAAWiL,EAAaI,OAAxD,UACE,cAACmB,GAAA,EAAD,wBACA,cAACC,GAAA,EAAD,CACEf,MAAM,YACNgB,SAAU,SAACC,GAAD,OACR/B,EAAS,CACPmB,UAAU,EACVzO,KAAM,WACNsP,MAAOD,EAAEE,OAAOD,SANtB,SAUGnB,EAAcqB,KAAI,SAACC,GAAD,OACjB,cAAClJ,EAAA,EAAD,CAA0B+I,MAAOG,EAAOjP,KAAxC,SACGiP,EAAOrB,OADKqB,EAAO3P,cAO9B,uBACA,cAACsF,EAAA,EAAD,CAAQ5E,KAAK,SAAb,4BC7KKkP,I,yDAlBX,WAAmBvM,GAAU,IAAD,8BACxB,cAAMA,IACDC,MAAO,CACR9C,KAAM,MAHc,E,qDAL5B,WAA2B,IAAD,OACtBmB,EAAMsF,WAAU,kBAChB,EAAKxD,SAAS,CAACjD,KAAMmB,EAAM4B,WAAWhD,UAAUC,Y,oBAWpD,WACI,OACA,qBAAKoC,UAAU,OAAf,UACHY,KAAKF,MAAM9C,MACA,cAAC,GAAD,U,GAnBGsD,c,OCDJ+L,OATf,WACI,OACI,sBAAKjN,UAAU,UAAf,UACL,6EACS,wBAAQT,MAAM,MAAME,OAAO,MAAMY,IAAI,uDAAuD6M,MAAM,WAAWlE,MAAM,uB,4CC2QhHmE,OAzPf,SAAmB1M,GACjB,MAAsCuC,mBAAS,IAA/C,mBAAOoK,EAAP,KAAoBC,EAApB,KACA,EAAkDrK,mBAAS,IAA3D,mBAA0BsK,GAA1B,WACA,EAAwCtK,mBAAS,GAAjD,mBAAOuK,EAAP,KAAqBC,EAArB,KACA,EAAsCxK,mBAAS,GAA/C,mBAAOyK,EAAP,KAAoBC,EAApB,KACA,EAA0C1K,mBAAuB,MAAjE,mBACA,GADA,UAC4CA,mBAAS,KAArD,mBACA,GADA,UAC8CA,mBAAS,KAAvD,mBAAO2K,EAAP,KAAwBC,EAAxB,KACA,EAA0C5K,mBAAS,IAAnD,mBAAO6K,EAAP,KAAsBC,EAAtB,KACA,EAA8C9K,mBAAS,IAAvD,mBACA,GADA,UACsCA,mBAAS,OAA/C,mBAAoB+K,GAApB,WAcA,EAAmCpD,eAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAxBmC,4CA0BrD,WAAoBmD,GAApB,eAAA3G,EAAA,uEAEU4G,EAAe,IAAIC,UACZC,OAAO,QAASH,EAAOhF,OACpCiF,EAAaE,OAAO,cAAeH,EAAOI,aAC1CH,EAAaE,OAAO,SAAUH,EAAOK,OAAOC,YAC5CL,EAAaE,OAAO,QAASH,EAAOO,MAAMD,YAC1CL,EAAaE,OAAO,WAAYH,EAAOQ,UACvCP,EAAaE,OAAO,YAAaH,EAAOS,UAAUH,YAClDL,EAAaE,OAAO,UAAWH,EAAOU,QAAQJ,YAC9CL,EAAaE,OAAO,QAASH,EAAOW,MAAM,IAV9C,UAW2BjK,GAAS4C,KAC9BL,GAAQ9B,KAAKe,UACb+H,GAbN,eAeI3M,EAAOO,QACL,0DAhBN,kDAmBIP,EAAOS,MAAM,gBAnBjB,2DA1BqD,sBAgErD,OACE,cAAC4J,GAAA,EAAD,CAAW3L,UAAU,YAArB,SACE,uBAAM4L,SAAUf,GAlEiC,8CAkEjD,UACE,eAACc,GAAA,EAAD,CAAW3L,UAAU,cAArB,UAEI,4CACF,cAAC6L,GAAA,EAAD,CACE7L,UAAU,YACVG,QAAQ,WACRuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,QACNsP,MAAOS,EAAeV,EAAEE,OAAOD,UAGnCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,yBAClC4N,UAAW,CAAEhC,MAAO,EAAG5L,QAAS,4BAElC1D,KAAK,QACLoO,MAAM,UAER,cAACG,GAAA,EAAD,CACA7L,UAAU,YACVG,QAAQ,WACNuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,cACNsP,MAAOU,EAAqBX,EAAEE,OAAOD,UAGzCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,iCAEpC1D,KAAK,cACLoO,MAAM,gBAER,uBACA,eAACa,GAAA,EAAD,CAAapM,QAAQ,WAAWH,UAAU,YAA1C,UACI,cAACwM,GAAA,EAAD,uBACJ,cAACC,GAAA,EAAD,CACCtM,QAAQ,WACPuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,WACNsP,MAAMD,EAAEE,OAAOD,SAGnBd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,+BAEpC1D,KAAK,WACLoO,MAAM,WACN5N,KAAK,OAfP,SA3DW,CACjB,OACA,cACA,aACA,WACA,uBACA,4BACA,SACA,QACA,YAmEsBgP,KAAI,SAACC,GAAD,OACf,cAAClJ,EAAA,EAAD,CAAmC+I,MAAOG,EAAO8B,UAAjD,SACK9B,EAAO+B,WAAW,IAAK,MADZ/B,EAAOuB,oBAO5B,uBAGA,cAACzC,GAAA,EAAD,CACA7L,UAAU,YACVG,QAAQ,WACNuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,SACNiO,UAAU,EACVzO,KAAM,SACNsP,MAAOY,GAAiBb,EAAEE,OAAOD,UAGrCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,4BAEpC1D,KAAK,SACLoO,MAAM,SACN5N,KAAK,WAGP,cAAC+N,GAAA,EAAD,CACE7L,UAAU,YACVG,QAAQ,WACRuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,SACNiO,UAAU,EACVzO,KAAM,QACNsP,MAAOc,GAAgBf,EAAEE,OAAOD,UAGpCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,2BAEpC1D,KAAK,QACLQ,KAAM,SACN4N,MAAM,iBAGR,cAACG,GAAA,EAAD,CACC7L,UAAU,YACV+O,WAAW,qBACX5O,QAAQ,WACTuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACL9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,YACNsP,MAAOgB,EAAmBjB,EAAEE,OAAOD,UAG3Cd,SAAUlB,EAAS,CACfmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,gCAEtC1D,KAAK,YAELQ,KAAK,SAGH,cAAC+N,GAAA,EAAD,CACA7L,UAAU,YACVG,QAAQ,WACR4O,WAAW,mBACTrC,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,UACNsP,MAAOkB,EAAiBnB,EAAEE,OAAOD,UAGrCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,8BAEpC1D,KAAK,UACLQ,KAAK,SAIP,cAAC+N,GAAA,EAAD,CACA7L,UAAU,YACVG,QAAQ,WACNuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,QACNsP,MAAOmB,EAAepB,EAAEE,OAAOD,UAGnCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,2BAEpC1D,KAAK,QACLyR,WAAW,eACXjR,KAAK,YAIT,cAAC4E,EAAA,EAAD,CACEI,QAASrC,EAAMmD,QACfoL,UA9NH5B,GACDO,EAAkBE,GACF,IAAhBJ,GACAF,GAAgB,EA4NZvN,UAAU,cACVlC,KAAK,SACL6E,QAAS,cAAC,IAAD,CAAiBC,KAAMqM,MALlC,2B,OCwCOC,OAjRf,SAAsBzO,GACpB,MAAgCuC,mBAASvC,EAAM0O,eAAe/R,IAA9D,mBACA,GADA,UACsC4F,mBAASvC,EAAM0O,eAAenG,QAApE,mBAAOoE,EAAP,KAAoBC,EAApB,KACA,EAAkDrK,mBAASvC,EAAM0O,eAAef,aAAhF,mBAA0Bd,GAA1B,WACA,EAAwCtK,mBAASvC,EAAM0O,eAAed,QAAtE,mBAAOd,EAAP,KAAqBC,EAArB,KACA,EAAsCxK,mBAASvC,EAAM0O,eAAeZ,OAApE,mBAAOd,EAAP,KAAoBC,EAApB,KACA,EAA0C1K,mBAASvC,EAAM0O,eAAe/H,SAAxE,mBACA,GADA,UAC4CpE,mBAASvC,EAAM0O,eAAeX,SAASF,aAAnF,mBAAOc,EAAP,KACA,GADA,KAC8CpM,mBAASvC,EAAM0O,eAAeV,UAAUH,aAAtF,mBAAOX,EAAP,KAAwBC,EAAxB,KACA,EAA0C5K,mBAASvC,EAAM0O,eAAeT,QAAQJ,YAAhF,mBAAOT,EAAP,KAAsBC,EAAtB,KACA,EAA8C9K,mBAAS,IAAvD,mBACA,GADA,UACsCA,mBAAS,OAA/C,mBAAOqM,EAAP,KAAoBtB,EAApB,KAeA,EAA2CpD,eAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aA1ByC,4CA4B3D,WAAoBmD,GAApB,iBAAA3G,EAAA,uEAEU4G,EAAe,IAAIC,UACZC,OAAO,KAAM1N,EAAM0O,eAAe/R,GAAGkR,YAClDL,EAAaE,OAAO,QAASH,EAAOhF,OACpCiF,EAAaE,OAAO,cAAeH,EAAOI,aAC1CH,EAAaE,OAAO,SAAUH,EAAOK,OAAOC,YAC5CL,EAAaE,OAAO,QAASH,EAAOO,MAAMD,iBACpBgB,IAAlBtB,EAAOQ,SACXP,EAAaE,OAAO,WAAYH,EAAOQ,UAGnCP,EAAaE,OAAO,WAAYiB,GAEpCnB,EAAaE,OAAO,YAAaH,EAAOS,UAAUH,YAClDL,EAAaE,OAAO,UAAWH,EAAOU,QAAQJ,YAC9B,MAAbe,GACHpB,EAAaE,OAAO,QAASH,EAAOW,MAAM,IAjB9C,UAmB2BjK,GAASkD,IAC9BX,GAAQ9B,KAAKgB,aACb8H,GArBN,QAmBUjM,EAnBV,OAuB0BA,EAASC,KAG/BX,EAAOO,QACL,kBAAkBpB,EAAM0O,eAAe/R,GAAG,kDA3BhD,kDAgCIkE,EAAOS,MAAM,gBAhCjB,2DA5B2D,sBA+E3D,OArDA,EAAgCwN,OACjB9M,cAqDb,cAACkJ,GAAA,EAAD,CAAW3L,UAAU,eAArB,SACE,uBAAM4L,SAAUf,GAjFuC,8CAiFvD,UACE,eAACc,GAAA,EAAD,CAAW3L,UAAU,cAArB,UAEI,+CACA,4CAAeS,EAAM0O,eAAe/R,MACpC,qBAAM4C,UAAU,MAAMK,IAAK4G,GAAQ9B,KAAK6B,eAAevG,EAAM0O,eAAeK,UAAWzL,MAAO,CAACxE,MAAO,IAAKE,OAAQ,OACrH,cAACoM,GAAA,EAAD,CACE7L,UAAU,YACVG,QAAQ,WACRsP,aAAchP,EAAM0O,eAAenG,MACnC0D,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,QACNsP,MAAOS,EAAeV,EAAEE,OAAOD,UAGnCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,yBAClC4N,UAAW,CAAEhC,MAAO,EAAG5L,QAAS,4BAElC1D,KAAK,QACLoO,MAAM,UAER,cAACG,GAAA,EAAD,CACA7L,UAAU,YACVG,QAAQ,WACRsP,aAAchP,EAAM0O,eAAef,YACjC1B,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,cACNsP,MAAOU,EAAqBX,EAAEE,OAAOD,UAGzCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,iCAEpC1D,KAAK,cACLoO,MAAM,gBAER,uBACA,eAACa,GAAA,EAAD,CAAapM,QAAQ,WAAWH,UAAU,YAA1C,UACI,cAACwM,GAAA,EAAD,uBACJ,cAACC,GAAA,EAAD,CACCtM,QAAQ,WACPsP,aAAchP,EAAM0O,eAAeX,SACnC9B,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,WACNsP,MAAMD,EAAEE,OAAOD,SAGnBd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,+BAEpC1D,KAAK,WACLoO,MAAM,WACN5N,KAAK,OAhBP,SA/DW,CACjB,OACA,cACA,aACA,WACA,uBACA,4BACA,SACA,QACA,YAwEsBgP,KAAI,SAACC,GAAD,OACf,cAAClJ,EAAA,EAAD,CAAmC+I,MAAOG,EAAO8B,UAAjD,SACK9B,EAAO+B,WAAW,IAAK,MADZ/B,EAAOuB,oBAO5B,uBAGA,cAACzC,GAAA,EAAD,CACA7L,UAAU,YACZyP,aAAchP,EAAM0O,eAAed,OACjClO,QAAQ,WACNuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,SACNiO,UAAU,EACVzO,KAAM,SACNsP,MAAOY,GAAiBb,EAAEE,OAAOD,UAGrCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,4BAEpC1D,KAAK,SACLoO,MAAM,SACN5N,KAAK,WAGP,cAAC+N,GAAA,EAAD,CACE7L,UAAU,YACVG,QAAQ,WACZsP,aAAchP,EAAM0O,eAAeZ,MAC/B7B,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,SACNiO,UAAU,EACVzO,KAAM,QACNsP,MAAOc,GAAgBf,EAAEE,OAAOD,UAGpCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,2BAEpC1D,KAAK,QACLQ,KAAM,SACN4N,MAAM,iBAIR,cAACG,GAAA,EAAD,CACC7L,UAAU,YACV+O,WAAW,qBACdU,aAAchP,EAAM0O,eAAeV,UAChCtO,QAAQ,WACTuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACL9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,YACNsP,MAAOgB,EAAmBjB,EAAEE,OAAOD,UAG3Cd,SAAUlB,EAAS,CACfmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,gCAEtC1D,KAAK,YAELQ,KAAK,SAEH,cAAC+N,GAAA,EAAD,CACA7L,UAAU,YACVG,QAAQ,WACVsP,aAAchP,EAAM0O,eAAeT,QACjCK,WAAW,mBACTrC,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,UACNsP,MAAOkB,EAAiBnB,EAAEE,OAAOD,UAGrCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAM5L,QAAS,8BAEpC1D,KAAK,UACLQ,KAAK,SAIH,cAAC+N,GAAA,EAAD,CACJ7L,UAAU,YACVG,QAAQ,WACNuM,SAAU,SAACC,GAAD,OACR/B,EAAS,CACP9M,KAAM,OACNiO,UAAU,EACVzO,KAAM,QACNsP,MAAOmB,EAAepB,EAAEE,OAAOD,UAGnCd,SAAUlB,EAAS,CACjBmB,SAAU,CAAEa,OAAO,EAAO5L,QAAS,2BAErC1D,KAAK,QACLyR,WAAW,eACXjR,KAAK,YAIT,cAAC4E,EAAA,EAAD,CACEI,QAASrC,EAAMmD,QACfoL,UArPH5B,IACCgC,GACFzB,EAAkBE,GACF,IAAhBJ,GACAF,GAAgB,EAkPZvN,UAAU,cACVlC,KAAK,SACL6E,QAAS,cAAC,IAAD,CAAiBC,KAAMqM,MALlC,2BC8FOS,G,kDAhVb,WAAmBjP,GAA2B,IAAD,8BAE3C,cAAMA,IA0EDkP,OAAS,SAAC3B,GACd,IAA6BA,EAAO5Q,GACrCsB,QAAQC,IAAIqP,IA9E+B,EAiF7C4B,SAAW/F,IAAMgG,YA9Ef,EAAKnP,MAAQ,CACXsH,YAAa,KACb/E,SAAU,KACV6M,WAAW,EACXC,cAAc,EACdC,QAAS,IARgC,E,4FAY7C,8EACEpP,KAAKmF,oBADP,gD,4HAKA,oGAGMhH,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS8H,SACpD3D,KAAKH,MAAM8B,QAAQC,KAAK,SAJhC,SAM2BkC,GAASuD,IAC9BhB,GAAQ9B,KAAKY,mBAPnB,OAMU/D,EANV,OASIpB,KAAKC,SAAS,CAAEmP,QAAShO,EAASC,OATtC,gDAWIrB,KAAKC,SAAS,CAAEmP,QAAS,KAX7B,yD,wHAeA,WAA2BxB,GAA3B,gGAE2B9J,GAASuD,IAC9BhB,GAAQ9B,KAAKa,4BAA8BwI,GAHjD,OAEUxM,EAFV,OAKIpB,KAAKC,SAAS,CAAEmP,QAAShO,EAASC,OALtC,gDAOIX,EAAOS,MAAM,kCAAoCyM,GAPrD,yD,yHAUA,WAA2BD,GAA3B,gGAE2B7J,GAASuD,IAC9BhB,GAAQ9B,KAAKc,4BAA8BsI,GAHjD,OAEUvM,EAFV,OAKIpB,KAAKC,SAAS,CAAEmP,QAAShO,EAASC,OALtC,gDAOIX,EAAOS,MAAM,uCAAyCwM,GAP1D,yD,oHAYA,WAAsBP,GAAtB,oGAE2BtJ,GAASwD,OAC9BjB,GAAQ9B,KAAKiB,aAAe4H,EAAO5Q,IAHzC,OAEU4E,EAFV,OAKUiO,EAAgBjO,EAASC,MACzBiO,EANV,YAM+BtP,KAAKF,MAAMsP,UACxBlI,OACVlH,KAAKF,MAAMsP,QAAQjI,QAAQkI,GAC3B,GAEJrP,KAAKC,SAAS,CAAEmP,QAASE,IACzB5O,EAAOO,QACL,kBACEmM,EAAO5Q,GACP,oDAfR,kDAkBIkE,EAAOS,MAAM,gBAlBjB,0D,2EA6BA,WAA8B,IAAD,OACrBoO,EAAa,CACjB,OACA,cACA,aACA,WACA,uBACA,4BACA,SACA,QACA,YAYE5B,EAAQ,EAIN6B,EAAuB,WAEzB,EAAKvP,SAAS,CAAEiP,WAAW,KAMzBO,EAA0B,WAC5B,EAAKtK,oBAEP,EAAKlF,SAAS,CAAEkP,cAAc,KAGhC,OACE,sBAAK/P,UAAU,eAAf,UACH,eAAC0C,EAAA,EAAD,CACS1C,UAAU,cACVoD,gBAAc,cACdC,gBAAc,OACdP,QAAS,kBAAM,EAAKiD,qBACpBuK,UAAW,cAAC,IAAD,CAAkB1N,KAAM2N,MAL5C,UAOU,IAPV,mBAWK,eAACC,GAAA,EAAD,CACE9M,MAA+B,IAAzB9C,KAAKF,MAAMoP,UACjBlM,QAASwM,EAFX,UAIE,cAACjE,GAAA,EAAD,CAAYrJ,QAASsN,EAArB,SACE,cAACK,GAAA,EAAD,MACY,IACd,cAAC,GAAD,CAAY7M,QAASwM,OAGvB,eAAC1N,EAAA,EAAD,CACE1C,UAAU,gBACV8C,QA1CsB,WAC1B,EAAKjC,SAAS,CAAEiP,WAAW,KA0CvB/L,MAAO,CAACC,MAAO,gBACfsM,UAAW,cAAC,IAAD,CAAiB1N,KAAM8N,MAJpC,UAMG,IANH,sBAUA,eAACF,GAAA,EAAD,CACE9M,MAAkC,IAA5B9C,KAAKF,MAAMqP,aACjBnM,QAASyM,EAFX,UAIE,cAAClE,GAAA,EAAD,CAAYrJ,QAASuN,EAArB,SACE,cAACI,GAAA,EAAD,MACY,IACd,cAAC,GAAD,CACEtB,eAAgBvO,KAAKF,MAAMsH,YAC3BpE,QAASyM,OAGZzP,KAAKF,MAAMsH,aACR,eAACtF,EAAA,EAAD,CACA1C,UAAU,mBACV+D,MAAO,CAACC,MAAO,gBACflB,QA3DuB,WAE3B,EAAKjC,SAAS,CAAEkP,cAAc,KA0D1BO,UAAW,cAAC,IAAD,CAAkB1N,KAAM+N,MAJnC,UAMC,IAND,4BAcJ,cAAC,IAAD,CACE/H,aAAc,CACZC,KAAM,CACJC,QAAS,CACPC,WACE,6DAIRC,MAAM,UACNC,QAAS,CACP,CAAED,MAAO,KAAME,MAAO,MACtB,CACEF,MAAO,WACPE,MAAO,WAEP0H,cAAe,SAACC,GAAD,OACb,cAACpE,GAAA,EAAD,CACEG,MAAOiE,EAAEjE,MACTF,SAAU,SAACC,GACTkE,EAAEnE,SAASC,EAAEE,OAAOD,QAHxB,SAMGuD,EAAWrD,KAAI,SAACC,GAAD,OACd,cAAClJ,EAAA,EAAD,CAAkC+I,MAAOG,EAAO8B,UAAhD,SACG9B,EAAO+B,WAAW,IAAK,MADX/B,EAAOuB,mBAO9B,CAAEtF,MAAO,QAASE,MAAO,QAAS3J,MAAO,OACzC,CAAEyJ,MAAO,cAAeE,MAAO,eAC/B,CAAEF,MAAO,SAAUE,MAAO,SAAUpL,KAAM,WAC1C,CAAEkL,MAAO,QAASE,MAAO,SACzB,CAAEF,MAAO,aAAcE,MAAO,YAAapL,KAAM,QACjD,CAAEkL,MAAO,WAAYE,MAAO,UAAWpL,KAAM,QAC7C,CACEkL,MAAO,QACPE,MAAO,QACP4H,OAAQ,SAACpI,GAAD,OACN,qBACErI,IAAK4G,GAAQ9B,KAAK6B,eAAiB0B,EAAQ8G,UAC3CzL,MAAO,CAAExE,MAAO,OAIpBqR,cAAe,SAACC,GAAD,OACb,8BACE,uBACE/S,KAAK,OACLiT,OAAO,UACPC,UAAQ,EACR1T,KAAK,QACLoP,SAAU,SAACC,GACTkE,EAAEnE,SAASC,EAAEE,OAAOD,eAOhC3K,KAAMrB,KAAKF,MAAMsP,QAEjB7H,WAAY,SAACC,EAAKC,GAChB,EAAKxH,SAAS,CAAEmH,YAAaK,IAC7B3J,QAAQC,IAAI,EAAK+B,MAAMsH,aAErB,EAAKtH,MAAMsH,cAAgBK,GACzB,EAAKxH,SAAS,CAAEmH,YAAa,QAGnCM,QAAS,CACPE,QAAQ,EACRC,SAAU,SAACC,GAAD,MAAc,CACtBC,gBACE,EAAKjI,MAAMsH,cAAgBU,EAAU,UAAY,UAGvDS,SAAU,CACRQ,YAAa,SAACD,GAAD,OACX,IAAIJ,SAAc,SAACC,EAASC,GAC1B,EAAKI,SAASF,GACdH,WAKR,iCAIE,eAAC7G,EAAA,EAAD,CACE1C,UAAU,qBACVoD,gBAAc,cACdC,gBAAc,OACdP,QArLY,SAACQ,GACnB,EAAKzC,SAAS,CAAEoC,SAAUK,EAAMC,iBAqL1B+M,UAAW,cAAC,IAAD,CAAiB1N,KAAMqO,MALpC,UAOG,IAPH,sBAUA,eAACzN,EAAA,EAAD,CACEpG,GAAG,cACH6F,SAAUrC,KAAKF,MAAMuC,SACrBQ,aAAW,EACXC,KAAMC,QAAQ/C,KAAKF,MAAMuC,UACzBW,QA5LY,WAClB,EAAK/C,SAAS,CAAEoC,SAAU,QAsLtB,UAQE,cAACY,EAAA,EAAD,CAAUf,QAAS,kBAAM,EAAKoO,qBAA9B,iBACCf,EAAWrD,KAAI,SAACC,GAAD,OACN,cAAClJ,EAAA,EAAD,CAAWf,QAAS,kBAAI,EAAKqO,cAAcpE,IAAiCH,MAAOG,EAAO8B,UAA1F,SACC9B,EAAO+B,WAAW,IAAK,MADiC/B,EAAOuB,qBAO9E,+BACG1N,KAAKF,MAAMsH,aACV,cAAC,IAAD,CACEhI,UAAU,MACVC,GAAI,eAAiBW,KAAKF,MAAMsH,YAAY5K,GAF9C,SAIE,cAACsF,EAAA,EAAD,CAAQ1C,UAAU,eAClBsQ,UAAW,cAAC,IAAD,CAAkB1N,KAAMwO,MADnC,sCAKN,uBACA,sBAAMpR,UAAU,gBAAhB,SACE,cAAC6L,GAAA,EAAD,CACE7L,UAAU,iBACV+D,MAAO,CAAExE,MAAO,KAChB8R,YAAY,oBACZ3E,SAAU,SAACC,GAAD,OAAQ4B,GAAS5B,EAAEE,OAAOD,OACpCZ,WAAY,CACVC,aACE,cAACE,GAAA,EAAD,CAAYrJ,QAAS,kBAAM,EAAKwO,cAAc/C,IAA9C,SACE,cAACgD,GAAA,EAAD,OARR,4B,GA5TiBrQ,aC+FZsQ,I,yDA9Gb,WAAmB/Q,GAA2B,IAAD,8BAC3C,cAAMA,IAgBDgR,MAjBsC,uCAiB9B,WAAOzD,GAAP,SAAA3G,EAAA,+EAGY3C,GAAS4C,KAC9BL,GAAQ9B,KAAKmB,eACb0H,GALS,cAOX1M,EAAOO,QACL,8BAAgC,EAAKnB,MAAMsH,YAAYgB,MAAQ,WARtD,gDAWX1H,EAAOS,MACL,4CAZS,yDAjB8B,sDAE3C,EAAKrB,MAAQ,CAAEsP,QAAS,GAAIhI,YAAa,MAFE,E,4FAK7C,oGAEOjJ,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS+H,UAAY5D,KAAKH,MAAM8B,QAAQC,KAAK,SAF/F,SAG2BkC,GAASuD,IAC9BhB,GAAQ9B,KAAKkB,eAJnB,OAGUrE,EAHV,OAMIpB,KAAKC,SAAS,CAACmP,QAAShO,EAASC,OANrC,gDAQErB,KAAKC,SAAS,CAACmP,QAAS,KAR1B,yD,0EA6BA,WAA8B,IAAD,OAE3B,OACE,sBAAKhQ,UAAU,mBAAf,UACE,cAAC,IAAD,CACEiC,KAAMrB,KAAKF,MAAMsP,QAAQxF,MAAK,SAACnD,EAAGoD,GAAJ,OAAUpD,EAAEjK,GAAKqN,EAAErN,MACjD+K,WAAY,SAACC,EAAKC,GAChB,EAAKxH,SAAS,CAAEmH,YAAaK,IAC7B3J,QAAQC,IAAI,EAAK+B,MAAMsH,aACtB,EAAKtH,MAAMsH,cAAcK,GAAK,EAAKxH,SAAS,CAACmH,YAAa,QAE7DM,QAAS,CACPE,QAAQ,EACRC,SAAU,SAACC,GAAD,MAAc,CACtBC,gBACE,EAAKjI,MAAMsH,cAAgBU,EAAU,UAAY,UAIvDgJ,WAAY,CACVC,OAAQ,SAAClR,GAAD,OACN,cAACiC,EAAA,EAAD,CAAQI,QAAS,kBAAMrC,EAAMrC,OAAO0E,WAApC,mBAGJkG,MAAM,oBACNC,QAAS,CACP,CAAED,MAAO,KAAME,MAAO,MACtB,CAAEF,MAAO,WAAYE,MAAO,WAAY3J,MAAM,OAC9C,CAAEyJ,MAAO,UAAWE,MAAO,gBAC3B,CAAEF,MAAO,QAASE,MAAO,QAAU3J,MAAO,OAC1C,CAAEyJ,MAAO,cAAeE,MAAO,eAC/B,CAAEF,MAAO,QAASE,MAAO,QAAU3J,MAAO,OAC1C,CAAEyJ,MAAO,aAAcE,MAAO,YAAapL,KAAM,QACjD,CAAEkL,MAAO,WAAYE,MAAO,UAAWpL,KAAM,QAC7C,CAAEkL,MAAO,QAASE,MAAO,QAAS4H,OAAQ,SAAApI,GAAO,OAAI,qBAAKrI,IAAK4G,GAAQ9B,KAAK6B,eAAe0B,EAAQ8G,UAAWzL,MAAO,CAAExE,MAAO,WAQ/HqB,KAAKF,MAAMsH,aACR,sBACFhI,UAAY,MADV,SAIF,cAAC0C,EAAA,EAAD,CACA1C,UAAU,eACV8C,QAAS,kBAAM,EAAK2O,MAAM,EAAK/Q,MAAMsH,cACrCsI,UAAW,cAAC,IAAD,CAAiB1N,KAAMgP,MAHlC,0BASJ,+BAEKhR,KAAKF,MAAMsH,aACT,cAAC,IAAD,CACAhI,UAAY,cACZC,GAAI,eAAiBW,KAAKF,MAAMsH,YAAY5K,GAF5C,SAIA,cAACsF,EAAA,EAAD,CAAQ1C,UAAU,eAClBsQ,UAAW,cAAC,IAAD,CAAiB1N,KAAMwO,MADlC,oC,GAlGelQ,cCyIf2Q,I,yDArIX,WAAmBpR,GAA2B,IAAD,8BAC3C,cAAMA,IACDC,MAAQ,CAAEsP,QAAS,GAAIhI,YAAa,KAAM/E,SAAU,MAFd,E,4FAK/C,oGAEOlE,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS+H,UAAY5D,KAAKH,MAAM8B,QAAQC,KAAK,SAF/F,SAG2BkC,GAASuD,IAC5BhB,GAAQ9B,KAAKoB,oBAJrB,OAGUvE,EAHV,OAMQpB,KAAKC,SAAS,CAACmP,QAAShO,EAASC,OANzC,gDAQUrB,KAAKC,SAAS,CAACmP,QAAS,KARlC,yD,wHAcA,WAA2BxB,GAA3B,gGAE6B9J,GAASuD,IAAmBhB,GAAQ9B,KAAKqB,6BAA6BgI,GAFnG,OAEYxM,EAFZ,OAGMpB,KAAKC,SAAS,CAACmP,QAAShO,EAASC,OAHvC,gDAKMX,EAAOS,MAAM,mCAAmCyM,GALtD,yD,yHAQF,WAA2BD,GAA3B,gGAE+B7J,GAASuD,IAAmBhB,GAAQ9B,KAAKsB,6BAA6B8H,GAFrG,OAEcvM,EAFd,OAGYpB,KAAKC,SAAS,CAACmP,QAAShO,EAASC,OAH7C,gDAMQX,EAAOS,MAAM,0CAA0CwM,GAN/D,yD,2EAaE,WAA8B,IAAD,OAUvBA,EAAQ,EAAE,OACV,sBAAKvO,UAAU,uBAAf,UAEF,cAAC,IAAD,CACKiC,KAAMrB,KAAKF,MAAMsP,QAAQxF,MAAK,SAACnD,EAAGoD,GAAJ,OAAUpD,EAAEjK,GAAKqN,EAAErN,MACjD+K,WAAY,SAACC,EAAKC,GAChB,EAAKxH,SAAS,CAAEmH,YAAaK,IAC7B3J,QAAQC,IAAI,EAAK+B,MAAMsH,aACtB,EAAKtH,MAAMsH,cAAcK,GAAK,EAAKxH,SAAS,CAACmH,YAAa,QAE7DM,QAAS,CACPE,QAAQ,EACRC,SAAU,SAACC,GAAD,MAAc,CACtBC,gBACE,EAAKjI,MAAMsH,cAAgBU,EAAU,UAAY,UAI1DM,MAAM,aACNC,QAAS,CACL,CAAED,MAAO,KAAME,MAAO,MACtB,CAAEF,MAAO,WAAYE,MAAO,WAAY3J,MAAM,OAC9C,CAAEyJ,MAAO,UAAWE,MAAO,gBAC3B,CAAEF,MAAO,QAASE,MAAO,QAAU3J,MAAO,OAC1C,CAAEyJ,MAAO,cAAeE,MAAO,eAC/B,CAAEF,MAAO,QAASE,MAAO,QAAU3J,MAAO,OAC1C,CAAEyJ,MAAO,aAAcE,MAAO,YAAapL,KAAM,QACjD,CAAEkL,MAAO,WAAYE,MAAO,UAAWpL,KAAM,QAC7C,CAAEkL,MAAO,QAASE,MAAO,QAAS4H,OAAQ,SAAApI,GAAO,OAAI,qBAAKrI,IAAK4G,GAAQ9B,KAAK6B,eAAe0B,EAAQ8G,UAAWzL,MAAO,CAAExE,MAAO,WAK9H,iCACW,cAACmD,EAAA,EAAD,CAAQ1C,UAAU,qBAAqBoD,gBAAc,cAAcC,gBAAc,OAAOP,QAzCvF,SAACQ,GACjB,EAAKzC,SAAS,CAACoC,SAASK,EAAMC,iBAyCb+M,UAAW,cAAC,IAAD,CAAiB1N,KAAMqO,MADpC,+BAGA,eAACzN,EAAA,EAAD,CACbpG,GAAG,cACH6F,SAAUrC,KAAKF,MAAMuC,SACrBQ,aAAW,EACXC,KAAMC,QAAQ/C,KAAKF,MAAMuC,UACzBW,QA7CgB,WAClB,EAAK/C,SAAS,CAACoC,SAAS,QAuCT,UAQb,cAACY,EAAA,EAAD,CAAUf,QAAS,kBAAI,EAAKoO,qBAA5B,iBArDa,CAAC,OAAQ,cAAe,aAAc,WAAY,uBAAwB,4BAA4B,SAAU,QAAS,YAsD1HpE,KAAI,SAACC,GAAD,OACE,cAAClJ,EAAA,EAAD,CAAWf,QAAS,kBAAI,EAAKqO,cAAcpE,IAAiCH,MAAOG,EAAO8B,UAA1F,SACG9B,EAAO+B,WAAW,IAAK,MAD+B/B,EAAOuB,qBAQtF,+BACA,4BACG1N,KAAKF,MAAMsH,aACR,cAAC,IAAD,CACAhI,UAAY,MACZC,GAAI,eAAiBW,KAAKF,MAAMsH,YAAY5K,GAF5C,SAGD,cAACsF,EAAA,EAAD,CAAQ1C,UAAU,eAClBsQ,UAAW,cAAC,IAAD,CAAkB1N,KAAMwO,MADnC,wCAMH,uBACE,sBAAMpR,UAAU,gBAAhB,SACM,cAAC6L,GAAA,EAAD,CACA9H,MAAO,CAACxE,MAAM,KACdS,UAAU,iBACVqR,YAAY,oBACZ3E,SAAW,SAACC,GAAD,OAAK4B,GAAO5B,EAAEE,OAAOD,OAChCZ,WAAY,CAACC,aAAa,cAACE,GAAA,EAAD,CAAYrJ,QAAS,kBAAI,EAAKwO,cAAc/C,IAA5C,SAAoD,cAACgD,GAAA,EAAD,OAL9E,4B,GAxHqBrQ,cCyLtB4Q,I,yDAtLb,WAAmBrR,GAAyB,IAAD,8BACzC,cAAMA,IAuCDgR,MAxCoC,uCAwC5B,WAAOzD,GAAP,SAAA3G,EAAA,+EAGY3C,GAAS4C,KAC9BL,GAAQ9B,KAAKmB,eACb0H,GALS,cAOX1M,EAAOO,QACL,8BAAgC,EAAKnB,MAAMsN,OAAOhF,MAAQ,WARjD,gDAWX1H,EAAOS,MAAM,4CAXF,yDAxC4B,sDAEzC,EAAKrB,MAAQ,CACXsN,OAAQ,KACR+B,cAAc,EACdgC,IAAK,KACLC,gBAAiB,IANsB,E,4FAU3C,yGAGOjT,EAAM4B,WAAWhD,UAAUC,MAAQgD,KAAKH,MAAM8B,QAAQC,KAAK,SAExDpF,EAAKwD,KAAKH,MAAMwR,MAAMC,OAAO9U,GAE/B+U,EAAM,GACNpT,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS8H,QAR9D,wBASM4N,EAAMlL,GAAQ9B,KAAK2B,oBATzB,SAU6BpC,GAASuD,IAAiBkK,EAAM/U,GAV7D,OAUY4E,EAVZ,OAWMpB,KAAKC,SAAS,CAAEmN,OAAQhM,EAASC,OAXvC,WAaQlD,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS+H,SAb9D,wBAcM2N,EAAMlL,GAAQ9B,KAAK4B,qBAdzB,UAekCrC,GAASuD,IACnChB,GAAQ9B,KAAKoB,oBAhBrB,eAeY6L,EAfZ,iBAkB6B1N,GAASuD,IAAiBkK,EAAM/U,GAlB7D,QAkBY4E,EAlBZ,OAmBMpB,KAAKC,SAAS,CACZmN,OAAQhM,EAASC,KACjB+P,gBAAiBI,EAAcnQ,OArBvC,0DA0BIlB,MAAM,UAAY,KAAIC,SA1B1B,0D,0EA6CA,WAA8B,IAAD,OAKrBqP,EAA0B,WAC9B,EAAKxP,SAAS,CAAEkP,cAAc,KAGhC,OACE,sBAAK/P,UAAU,iBAAf,UACGY,KAAKF,MAAMsN,QACV,qCACE,6BAAKpN,KAAKF,MAAMsN,OAAOhF,QACvB,qBACEjF,MAAO,CAAExE,MAAO,IAAKE,OAAQ,KAC7BY,IAAK4G,GAAQ9B,KAAK6B,eAAiBpG,KAAKF,MAAMsN,OAAOwB,YAEvD,+CAAkB5O,KAAKF,MAAMsN,OAAOI,eACpC,2CAAcxN,KAAKF,MAAMsN,OAAO5G,QAAQ9J,QACxC,yCAAYsD,KAAKF,MAAMsN,OAAOO,SAC7BxP,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS8H,SACrD,0CAAa3D,KAAKF,MAAMsN,OAAOK,UAEjC,qDAAwBzN,KAAKF,MAAMsN,OAAOS,aAC1C,mDAAsB7N,KAAKF,MAAMsN,OAAOU,WACxC,uBACA,0BAKJ,uBAAM1O,UAAU,UAAhB,UACGjB,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS+H,WACpD5D,KAAKF,MAAMsR,gBAAgBK,SAASzR,KAAKF,MAAMsN,SAC9C,cAACtL,EAAA,EAAD,CACEqB,MAAO,CACLuO,SAAU,QACVC,WAAY,QACZvO,MAAO,gBAEThE,UAAU,MACV8C,QAAS,kBAAM,EAAK2O,MAAM,EAAK/Q,MAAMsN,SAPvC,6BAaHjP,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS8H,SACrD,cAAC7B,EAAA,EAAD,CACEqB,MAAO,CACLuO,SAAU,QACVC,WAAY,QACZvO,MAAO,gBAEThE,UAAU,MACVwS,UAAWC,IACXxS,GAAG,wBACHE,QAAQ,YACR6D,MAAM,UAVR,kBAeF,eAACwM,GAAA,EAAD,CACE9M,MAAkC,IAA5B9C,KAAKF,MAAMqP,aACjBnM,QAASyM,EAFX,UAIE,cAAClE,GAAA,EAAD,CAAYrJ,QAASuN,EAArB,SACE,cAACI,GAAA,EAAD,MACY,IACd,cAAC,GAAD,CACEtB,eAAgBvO,KAAKF,MAAMsN,OAC3BpK,QAASyM,OAIZtR,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS8H,SACrD,cAAC7B,EAAA,EAAD,CACE1C,UAAU,eACV+D,MAAO,CAAEC,MAAO,eAAgBsO,SAAU,SAC1CxP,QA/EqB,WAC7B,EAAKjC,SAAS,CAAEkP,cAAc,KA+EtBO,UAAW,cAAC,IAAD,CAAiB1N,KAAM+N,MAJpC,2BAUD5R,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS+H,UACrD,cAAC9B,EAAA,EAAD,CACEqB,MAAO,CACLuO,SAAU,QACVC,WAAY,QACZvO,MAAO,gBAEThE,UAAU,MACVwS,UAAWC,IACXxS,GAAG,4BACHE,QAAQ,YACR6D,MAAM,UAVR,iCAgBDjF,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAahB,EAAS+H,UACrD,cAAC9B,EAAA,EAAD,CACEqB,MAAO,CACLuO,SAAU,QACVC,WAAY,QACZvO,MAAO,gBAEThE,UAAU,MACVwS,UAAWC,IACXxS,GAAG,iCACHE,QAAQ,YACR6D,MAAM,UAVR,0C,GAlKa9C,cCwDVwR,I,yDA/DX,WAAmBjS,GAAwB,IAAD,8BACtC,cAAMA,IACDC,MAAQ,CAAC0G,QAAS,MAFe,E,4FAK1C,wGAEchK,EAAKwD,KAAKH,MAAMwR,MAAMC,OAAO9U,GAC/B+U,EAAM,GACNpT,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS8H,UACxD4N,EAAMlL,GAAQ9B,KAAKwB,mBAEf5H,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS6H,QACxD6N,EAAMlL,GAAQ9B,KAAKyB,cAAcxJ,GARzC,SAUyBsH,GAASuD,IAAkBkK,GAVpD,OAUQnQ,EAVR,OAWEpB,KAAKC,SAAS,CAACuG,QAAUpF,EAASC,OAClCvD,QAAQC,IAAIiC,KAAKF,OAZnB,kDAeQK,MAAM,UAAW,KAAIC,SAf7B,0D,0EAwBJ,WACI,OAEI,sBAAKhB,UAAU,kBAAf,UACMY,KAAKF,MAAM0G,SACZ,qCACL,6BAAKxG,KAAKF,MAAM0G,QAAQ9J,OACxB,yCAAYsD,KAAKF,MAAM0G,QAAQ/J,SAC/B,4CAAeuD,KAAKF,MAAM0G,QAAQ7J,eAGlC,iCAEPwB,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS8H,SACrD,cAAC,IAAD,CAASR,MAAO,CAAIuO,SAAS,QACVC,WAAW,QACXvO,MAAO,gBAEtBhE,UAAU,MAAMC,GAAG,wBAJvB,mCAKClB,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS6H,OACrD,cAAC,IAAD,CAASP,MAAO,CACGuO,SAAS,QACTC,WAAW,QACXvO,MAAO,gBAEtBhE,UAAU,MAAMC,GAAG,wBALvB,6C,GAlD0BiB,cC8DXyR,I,yDA9DX,WAAmBlS,GAAyB,IAAD,8BACvC,cAAMA,IACDC,MAAQ,CAACqJ,SAAU,MAFe,E,4FAK3C,wGAEc3M,EAAKwD,KAAKH,MAAMwR,MAAMC,OAAO9U,GAC/B+U,EAAM,GACNpT,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS+H,WACxD2N,EAAMlL,GAAQ9B,KAAKuB,oBAEf3H,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS6H,QACxD6N,EAAM,iDAAiD/U,GAR/D,SAUyBsH,GAASuD,IAAmBkK,GAVrD,OAUQnQ,EAVR,OAWEpB,KAAKC,SAAS,CAACkJ,SAAW/H,EAASC,OAXrC,kDAcQlB,MAAM,UAAW,KAAIC,SAd7B,0D,0EAuBJ,WACI,OAEI,sBAAKhB,UAAU,kBAAf,UACMY,KAAKF,MAAMqJ,UACZ,qCACL,6BAAKnJ,KAAKF,MAAMqJ,SAASG,UAAU,IAAItJ,KAAKF,MAAMqJ,SAASI,WAC3D,yCAAYvJ,KAAKF,MAAMqJ,SAAS1M,SAChC,4CAAeuD,KAAKF,MAAMqJ,SAASxM,eAGnC,iCAEPwB,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS+H,UACrD,cAAC,IAAD,CAAST,MAAO,CAAIuO,SAAS,QACVC,WAAW,QACXvO,MAAO,gBAEtBhE,UAAU,MAAMC,GAAG,iCAJvB,gCAKClB,EAAM4B,WAAWhD,UAAUC,KAAKH,WAAWhB,EAAS6H,OACrD,cAAC,IAAD,CAASP,MAAO,CACGuO,SAAS,QACTC,WAAW,QACXvO,MAAO,gBAEtBhE,UAAU,MAAMC,GAAG,wBALvB,6C,GAjD2BiB,cC4BZ0R,OA9Bf,WACI,OACI,qBAAK5S,UAAU,UAAf,SACJ,eAAC,IAAD,WACW,cAAC,IAAD,CAAO6S,KAAK,QAAQL,UAAWxF,GAAM8F,OAAK,IAC1C,cAAC,IAAD,CAAOD,KAAK,cAAcL,UAAWzP,EAAW+P,OAAK,IACrD,cAAC,IAAD,CAAOD,KAAK,wBAAwBL,UAAWtL,GAAgB4L,OAAK,IACpE,cAAC,IAAD,CAAOD,KAAK,wBAAwBL,UAAW1I,GAAgBgJ,OAAK,IACpE,cAAC,IAAD,CAAOD,KAAK,gBAAgBL,UAAWvO,EAAa6O,OAAK,IACzD,cAAC,IAAD,CAAOD,KAAK,iBAAiBL,UAAW1O,EAAcgP,OAAK,IAC3D,cAAC,IAAD,CAAOD,KAAK,wBAAwBL,UAAW9C,GAAcoD,OAAK,IAClE,cAAC,IAAD,CAAOD,KAAK,4BAA4BL,UAAWhB,GAAiBsB,OAAK,IACzE,cAAC,IAAD,CAAOD,KAAK,iCAAiCL,UAAWX,GAAsBiB,OAAK,IACnF,cAAC,IAAD,CAAOD,KAAK,kBAAkBL,UAAWV,GAAYgB,OAAK,IAC1D,cAAC,IAAD,CAAOD,KAAK,gBAAgBL,UAAWE,GAAaI,OAAK,IACzD,cAAC,IAAD,CAAOD,KAAK,mBAAmBL,UAAWE,GAAaI,OAAK,IAC5D,cAAC,IAAD,CAAOD,KAAK,iBAAiBL,UAAWG,GAAcG,OAAK,IAC3D,cAAC,IAAD,CAAOD,KAAK,oBAAoBL,UAAWG,GAAcG,OAAK,IAK9D,cAAC,IAAD,CAAUC,KAAK,IAAI9S,GAAG,QAAQ6S,OAAK,IACnC,cAAC,IAAD,CAAON,UAAavF,W,oBCjC7B7N,GAAQ4T,aAAe,CACzBC,WAAY,CACV7H,WAAY,CACV,WACA,WACA8H,KAAK,KACPZ,SAAU,MAiCDa,OA5Bf,WACE,OACI,cAACC,GAAA,EAAD,CAAehU,MAAOA,GAAtB,SAIF,qBAAKY,UAAU,SAAf,SACI,eAAC,IAAD,WACA,iCACI,cAAC,EAAD,MAGJ,+BACI,cAAC,GAAD,MAGJ,iCACI,cAAC,EAAD,cC5BZqT,IAASvC,OACP,cAAC,IAAMwC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1B9W,M","file":"static/js/main.f741593d.chunk.js","sourcesContent":["class UserModel{\n    \n    public id: number;\n    public email: string;\n    public name: string;\n    public password?: string;\n    public token: string;\n    public userType: UserType;\n}\n\nexport default UserModel;\n\n\nexport enum UserType{\n    ADMIN=\"ADMIN\",\n    COMPANY=\"COMPANY\",\n    CUSTOMER=\"CUSTOMER\"\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//Handling Products AppState\n\nimport UserModel from \"../Models/UserModel\";\n\n\n\n\n// Products AppState - המידע ברמת האפליקציה הקשור למוצרים - אלו בעצם כל המוצרים\nexport class AuthState{ \n    public user: UserModel = new UserModel ();\n\n\n}\n\n//------------------------------------------------------------------\n\n//Products Action Types - אלו פעולות ניתן לבצע על המידע ברמת האפליקציה\n\nexport enum AuthActionType{\n    LOGIN = \"LOGIN\",\n    LOGOUT = \"LOGOUT\"\n\n}\n//------------------------------------------------------------------\n\n//Products Action  - אובייקט המכיל את המידע עבור הפעולה שאני מבצעים על המידע\nexport interface AuthAction{\n    type: AuthActionType;\n    payload?: any;\n}\n\n\n//------------------------------------------------------------------\n\n// Products Action Creators - פונקציות המקבלות את ה פיילוד ומחירות אובייקט אקשן מתאים עבור כל פעולה\n\n\nexport function loginAction(user: UserModel): AuthAction {\n    return { type: AuthActionType.LOGIN, payload: user };\n}\n    \nexport function logoutAction(): AuthAction {\n    return { type: AuthActionType.LOGOUT };\n}\n\n\n//------------------------------------------------------------------\n\n//Products Reducer - פונקציה המבצעת את הפעולה בפועל\nexport function authReducer(currentState: AuthState = new AuthState(), action: AuthAction): AuthState {\n const newState = {...currentState}; // Spread Operator\n switch (action.type) {\n\n    case AuthActionType.LOGIN: // Here the payload is the logged in user sent from the server\n        newState.user = action.payload;\n        // localStorage.setItem(\"user\", JSON.stringify(newState.user)); // Saving in the local storage (won't be deleted)\n        sessionStorage.setItem(\"user\", JSON.stringify(newState.user)); // Saving in the session storage (will be deleted when browser is closed)\n        console.log(action.payload);\n        break;\n    case AuthActionType.LOGOUT: // Here we don't have payload!\n        newState.user = null;\n        localStorage.removeItem(\"user\"); // clear user from the local storage.\n        break;\n}\n\nreturn newState;\n}\n\n","import { authReducer, AuthState } from './AuthState';\nimport { combineReducers, createStore } from \"redux\";\n\n\n\nconst reducers = combineReducers({AuthState: authReducer});\nconst store = createStore(reducers);\n\n\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/coupFunIcon.833c4afa.png\";","import \"./Logo.css\";\n\nimport coupFunLogo from '../../../../src/Assets/Images/coupFunIcon.png';\nimport { Avatar, createStyles, makeStyles, Theme, Toolbar, Typography } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\n\nfunction Logo(): JSX.Element {\n\n    const useStyles = makeStyles((theme: Theme) => createStyles({\n        xSmall: {\n            width: theme.spacing(5),\n            height: theme.spacing(5),\n        },\n        small: {\n            width: theme.spacing(10),\n            height: theme.spacing(10),\n        },\n        medium: {\n            width: theme.spacing(12),\n            height: theme.spacing(12),\n        },\n\n        large: {\n            width: theme.spacing(15),\n            height: theme.spacing(15),\n        },\n        xLarge: {\n            width: theme.spacing(18),\n            height: theme.spacing(18),\n        }\n    }));\n\n    const styleClass = useStyles();\n\n    return (\n\n        <Toolbar className='Logo'>\n            <NavLink to=\"/home\">\n\n            <Typography className='coup-fun-name' variant='h5'>\n                CoupManager\n        </Typography>\n\n            <Avatar className={styleClass.small + ' coup-fun-logo'} src={coupFunLogo} alt='coup-fun-logo' />\n            </NavLink>\n\n        </Toolbar>\n\n\n\n\n\n\n\n\n    );\n}\n\nexport default Logo;\n","import { Component } from \"react\";\nimport UserModel from \"../../../../Models/UserModel\";\nimport store from \"../../../../Redux/Store\";\nimport \"./UserCard.css\";\n\ninterface UserCardState {\n    user: UserModel;\n\t\n}\n\nclass UserCard extends Component<{}, UserCardState> {\n\n    public constructor (props: {}) {\n        super(props);\n        this.state = {user: null};\n    }\n\n\npublic async componentWillMount() {\n    try {\n\n  const user = store.getState().AuthState.user;\n  this.setState({user});\n    }\n    catch (err) {\n        alert(\"Error: \" +err.message);\n    }\n}\n\n\npublic render(): JSX.Element {\n    return (\n        <div className=\"UserCard\">\n\t\t\t<div>\n                \n\n                {whatTimeIsIt()===1&& <span>Good Night <br/> {this.state.user.name}</span>}\n                {whatTimeIsIt()===2&& <span>Good Morning <br/>{this.state.user.name}</span>}\n                {whatTimeIsIt()===3&& <span>Good Afternoon <br/>{this.state.user.name}</span>}\n                {whatTimeIsIt()===4&& <span>Good Evening<br/> {this.state.user.name}</span>}\n                \n            </div>\n        </div>\n    );\n}\n}\n\nexport default UserCard;\n\nfunction whatTimeIsIt(): number {\n    const now = new Date();\n    let timeOfDay: number = now.getHours(); //\n    switch (true) {\n        case (timeOfDay<6):\n            return 1\n            break;\n        case (timeOfDay<12):\n            return 2\n            break;\n    \n        case (timeOfDay<18):\n            return 3\n            break;\n    \n        case (timeOfDay<22):\n            return 4\n            break;\n\n        default:\n            return 1;\n            break;\n    }\n}\n","import { Notyf } from 'notyf';\n\n\nclass Notify {\n\n    private notification = new Notyf({duration: 2000, position:{x: \"right\", y:\"bottom\"}});\n\n    public success(message: string) {\n        this.notification.success(message);\n\n    }\n    public error(err: any){\n        const message = this.extractMessage(err);\n        this.notification.error(message);\n\n    }\n    private extractMessage(err: any): string {\n        if (typeof err===\"string\"){\n            return err;\n        }\n     \n        if (typeof err?.response?.data===\"string\"){\n            return err.response.data;\n        }\n        if (Array.isArray(err?.response?.data)){\n            return err.response.data[0];\n        }\n        if (typeof err?.message===\"string\"){\n            return err.message;\n        }\n        return \"some error occurred, please try again\";\n    }\n}\n\nconst notify = new Notify();\n\nexport default notify;","import { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport { logoutAction } from \"../../../Redux/AuthState\";\nimport store from \"../../../Redux/Store\";\nimport notify from \"../../../Services/Notification\";\nimport \"./Logout.css\"\n\n\nfunction Logout(): JSX.Element {\n    \n    function logout(){\n        notify.success(\"You are logged out of the Coupons System\")\n        store.dispatch(logoutAction());\n        history.push(\"/home\");\n        \n         \n    }\n    const history = useHistory();\n    return <Button className= \"Logout\" endIcon={<FontAwesomeIcon icon={faSignOutAlt}/>} onClick={()=> logout() }>Logout</Button>;\n}\n\nexport default Logout;\n","import { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Logout from \"../../AuthArea/Logout/Logout\";\nimport \"./AdminMenu.css\";\n\nexport default function AdminMenu() {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className=\"AdminMenu\">\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        Open Menu\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>\n          {\" \"}\n          <NavLink to=\"/admin/companiesTable/\">Companies</NavLink>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <span>\n            <NavLink to=\"/admin/customersTable/\">Customers</NavLink>\n          </span>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>{<Logout />}</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Logout from \"../../AuthArea/Logout/Logout\";\nimport \"./CustomerMenu.css\";\n\nexport default function CustomerMenu() {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className=\"CustomerMenu\">\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        Open Menu\n      </Button>\n      <Menu\n        style={{\n          color: \"antiquewhite\",\n        }}\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>\n          {\" \"}\n          <NavLink to=\"/customer/allCouponsTable\">Purchase Coupons</NavLink>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <NavLink to=\"/customer/CustomerCouponsTable\">My Coupons</NavLink>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <NavLink to=\"/customerCard/\">My Details</NavLink>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>{<Logout />}</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Logout from \"../../AuthArea/Logout/Logout\";\nimport \"./CompanyMenu.css\";\n\nexport default function CompanyMenu() {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className=\"CompanyMenu\">\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        Open Menu\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>\n          {\" \"}\n          <NavLink to=\"/company/couponsTable/\">Coupons</NavLink>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>\n          <NavLink to=\"/companyCard\">Company Details</NavLink>\n        </MenuItem>\n        <MenuItem onClick={handleClose}>{<Logout />}</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport UserModel, { UserType } from \"../../../Models/UserModel\";\nimport store from \"../../../Redux/Store\";\nimport Logo from \"../../SharedArea/Logo/Logo\";\nimport UserCard from \"../../SharedArea/CardArea/UserCard/UserCard\";\n\nimport \"./Header.css\";\nimport AdminMenu from \"../../MenuArea/AdminMenu/AdminMenu\";\nimport CustomerMenu from \"../../MenuArea/CustomerMenu/CustomerMenu\";\nimport CompanyMenu from \"../../MenuArea/CompanyMenu/CompanyMenu\";\n\n\n\nfunction Header(): JSX.Element {\n    \n    const [user, setUser] = useState<UserModel>();  \n    useEffect(()=> {\n        store.subscribe(()=>\n        setUser(store.getState().AuthState.user)\n        );\n    }, [])\n    \n  \n        return (\n            <div className=\"Header\">\n                <h1>COUPON MANAGER</h1>\n                <h3>organize your coupons with world class efficiency\n                    </h3>\n                \n                <span \n                className=\"UserCard\">\n                {user && <UserCard/>}\n                </span> \n\n                    {<Logo/>}\n\n                <span\n                className=\"menu\">\n                  {user && user.userType===UserType.ADMIN && <AdminMenu/>}  \n                  {user && user.userType===UserType.COMPANY && <CompanyMenu/>}  \n                  {user && user.userType===UserType.CUSTOMER && <CustomerMenu/>}  \n                </span>\n                            \n            </div>\n        );\n    } \n\nexport default Header;\n","import \"./Footer.css\";\n\nfunction Footer(): JSX.Element {\n    return (\n        <div className=\"Footer\">\n\t\t\t<h4>  All rights reserved to Gad Torrefranca &copy;</h4>\n        </div>\n    );\n}\n\nexport default Footer;\n","import axios from 'axios';\nimport store from '../Redux/Store';\n\nconst jwtAxios = axios.create();\n\n// Request interceptor - מה אנו רוצים לבצע בכל שליחת בקשה לשרת\njwtAxios.interceptors.request.use(request => {\n    // console.log(store.getState().AuthState.user?.token)\n    request.headers = {\n        \"token\": store.getState().AuthState.user?.token\n    };\n\n    return request;\n});\n\nexport default jwtAxios;","// Global settings which are the same for development and production\nclass Globals {\n\n}   \n\n// Global settings which are suitable only for development:\nclass DevelopmentGoals extends Globals{\n    public urls = {\n        loginAdmin: \"http://localhost:8080/admin/login?email=\",\n        loginCompany: \"http://localhost:8080/company/login?email=\",\n        loginCustomer: \"http://localhost:8080/customer/login?email=\",\n        password: \"&password=\",\n        getAllCompanies: \"http://localhost:8080/admin/getAllCompanies\",\n        addCompany: \"http://localhost:8080/admin/addCompany\",\n        updateCompany: \"http://localhost:8080/admin/updateCompany\",\n        deleteCompany: \"http://localhost:8080/admin/deleteCompany?id=\",\n        getAllCustomers: \"http://localhost:8080/admin/getAllCustomers\",\n        addCustomer: \"http://localhost:8080/admin/addCustomer\",\n        updateCustomer: \"http://localhost:8080/admin/updateCustomer\",\n        deleteCustomer: \"http://localhost:8080/admin/deleteCustomer?id=\",\n        getCompanyCoupons: \"http://localhost:8080/company/getCompanyCoupons\",\n        getCompanyCouponsByCategory: \"http://localhost:8080/company/getCompanyCouponsByCategory?category=\",\n        getCompanyCouponsByMaxPrice: \"http://localhost:8080/company/getCompanyCouponsByPrice?maxPrice=\",\n        addCoupon: \"http://localhost:8080/company/addCoupon\",\n        updateCoupon: \"http://localhost:8080/company/updateCoupon\",\n        deleteCoupon: \"http://localhost:8080/company/deleteCoupon?id=\",\n        getAllCoupons:  \"http://localhost:8080/customer/getAllCoupons\",\n        purchaseCoupon: \"http://localhost:8080/customer/purchaseCoupon\",\n        getCustomerCoupons:\"http://localhost:8080/customer/getCustomerCoupons\",\n        getCustomerCouponsByCategory:\"http://localhost:8080/customer/getCustomerCouponsByCategory?category=\",\n        getCustomerCouponsByMaxPrice:\"http://localhost:8080/customer/getCustomerCouponsByPrice?maxPrice=\",\n        getCustomerDetails:\"http://localhost:8080/customer/customer/getCustomerDetails\",\n        getCompanyDetails: \"http://localhost:8080/company/getCompanyDetails\",\n        getOneCompany: \"http://localhost:8080/admin/getOneCompany?id=\",\n        getOneCustomer: \"http://localhost:8080/admin/getOneCustomer?id=\",\n        getOneCouponCompany: \"http://localhost:8080/company/getOneCoupon/\",\n        getOneCouponCustomer: \"http://localhost:8080/customer/getOneCoupon/\",\n        getCouponImage: \"http://localhost:8080/pics/\"\n    }\n\n}\n\n// Global settings which are suitable only for production\nclass ProductionGlobals extends Globals{\n    public urls = {\n        loginAdmin: \"https://coupon-manager-gad.herokuapp.com/admin/login?email=\",\n        loginCompany: \"https://coupon-manager-gad.herokuapp.com/company/login?email=\",\n        loginCustomer: \"https://coupon-manager-gad.herokuapp.com/customer/login?email=\",\n        password: \"&password=\",\n        getAllCompanies: \"https://coupon-manager-gad.herokuapp.com/admin/getAllCompanies\",\n        addCompany: \"https://coupon-manager-gad.herokuapp.com/admin/addCompany\",\n        updateCompany: \"https://coupon-manager-gad.herokuapp.com/admin/updateCompany\",\n        deleteCompany: \"https://coupon-manager-gad.herokuapp.com/admin/deleteCompany?id=\",\n        getAllCustomers: \"https://coupon-manager-gad.herokuapp.com/admin/getAllCustomers\",\n        addCustomer: \"https://coupon-manager-gad.herokuapp.com/admin/addCustomer\",\n        updateCustomer: \"https://coupon-manager-gad.herokuapp.com/admin/updateCustomer\",\n        deleteCustomer: \"https://coupon-manager-gad.herokuapp.com/admin/deleteCustomer?id=\",\n        getCompanyCoupons: \"https://coupon-manager-gad.herokuapp.com/company/getCompanyCoupons\",\n        getCompanyCouponsByCategory: \"https://coupon-manager-gad.herokuapp.com/company/getCompanyCouponsByCategory?category=\",\n        getCompanyCouponsByMaxPrice: \"https://coupon-manager-gad.herokuapp.com/company/getCompanyCouponsByPrice?maxPrice=\",\n        addCoupon: \"https://coupon-manager-gad.herokuapp.com/company/addCoupon\",\n        updateCoupon: \"https://coupon-manager-gad.herokuapp.com/company/updateCoupon\",\n        deleteCoupon: \"https://coupon-manager-gad.herokuapp.com/company/deleteCoupon?id=\",\n        getAllCoupons:  \"https://coupon-manager-gad.herokuapp.com/customer/getAllCoupons\",\n        purchaseCoupon: \"https://coupon-manager-gad.herokuapp.com/customer/purchaseCoupon\",\n        getCustomerCoupons:\"https://coupon-manager-gad.herokuapp.com/customer/getCustomerCoupons\",\n        getCustomerDetails:\"https://coupon-manager-gad.herokuapp.com/customer/customer/getCustomerDetails\",\n        getCustomerCouponsByCategory:\"https://coupon-manager-gad.herokuapp.com/customer/getCustomerCouponsByCategory?category=\",\n        getCustomerCouponsByMaxPrice:\"https://coupon-manager-gad.herokuapp.com/customer/getCustomerCouponsByPrice?maxPrice=\",\n        getCompanyDetails: \"https://coupon-manager-gad.herokuapp.com/company/getCompanyDetails\",\n        getOneCompany: \"https://coupon-manager-gad.herokuapp.com/admin/getOneCompany?id=\",\n        getOneCustomer: \"https://coupon-manager-gad.herokuapp.com/admin/getOneCustomer?id=\",\n        getOneCouponCompany: \"https://coupon-manager-gad.herokuapp.com/company/getOneCoupon/\",\n        getOneCouponCustomer: \"https://coupon-manager-gad.herokuapp.com/customer/getOneCoupon/\",\n        getCouponImage: \"https://coupon-manager-gad.herokuapp.com/pics/\"\n    }\n\n}\n\nconst globals = process.env.NODE_ENV === \"production\" ? new DevelopmentGoals() : new ProductionGlobals();\n\nexport default globals;","import * as React from 'react';\nimport CompanyModel from '../../../../Models/CompanyModel';\nimport { Button } from '@material-ui/core';\nimport MaterialTable from 'material-table';\nimport jwtAxios from '../../../../Services/JwtAxios';\nimport notify from '../../../../Services/Notification';\nimport { NavLink } from 'react-router-dom';\nimport \"./CompaniesTable.css\";\nimport globals from '../../../../Services/Globals';\nimport {History} from \"history\";\n\ninterface CompaniesTableProps{\n    history: History;\n}\n\ninterface CompaniesTableState{\n    companies: CompanyModel[];\n    selectedRow: CompanyModel;\n}\n\nclass CompaniesTable extends React.Component<CompaniesTableProps, CompaniesTableState>{\n    public constructor(props: CompaniesTableProps) {\n        super(props);\n        this.state = {companies: [], selectedRow: null\n    };\n}\n   \n    public async componentDidMount(){\n        try{\n            const response = await jwtAxios.get<CompanyModel[]>(globals.urls.getAllCompanies);\n            this.setState({companies: response.data});\n            \n        }\n        catch (err) {\n            this.props.history.push(\"/home\")  \n        }\n    }\n     \n    public onAdd = async (company:CompanyModel) => {\n        try{\n        \n            const response = await jwtAxios.post<CompanyModel>(globals.urls.addCompany, company);\n            const addedCompany = response.data;\n            const companies = [...this.state.companies];\n            companies.push(addedCompany);\n            this.setState({companies});\n            notify.success(\"Company \"+company.name+\" has been successfully added to the database\")\n            return addedCompany.id;\n            \n        }\n        catch (err){\n            notify.error(\"Error: \"+err);\n            \n        }\n        \n    }\n    \n    public onEdit = async(companyNew:CompanyModel, companyOld:CompanyModel)  =>{\n        try{\n            const response = await jwtAxios.put<CompanyModel>(globals.urls.updateCompany, companyNew);\n            const updatedCompany = response.data;\n            const companies = [...this.state.companies];\n            companies.splice(companies.indexOf(companyOld),1);\n            companies.push(updatedCompany);\n            this.setState({companies});\n            notify.success(\"Company \"+companyNew.name+\" has been successfully updated\")\n            \n            \n        }\n        catch (err){\n            notify.error(\"Error: \"+err);\n            \n        }\n        \n    }\n    \n    public async onDelete(company:CompanyModel) {\n        try{\n            const response = await jwtAxios.delete<CompanyModel>(globals.urls.deleteCompany+company.id);\n            const companies = [...this.state.companies];\n            companies.splice(companies.indexOf(company),1);\n            notify.success(\"Company \"+company.name+\" has been successfully deleted from the database\")\n            this.setState({companies});\n            \n        }\n        catch (err){\n            notify.error(\"Error: \"+err);\n          \n        }\n        \n    }\n\n    public render(): JSX.Element {\n\n        return (\n            <div className=\"CompaniesTable\">\n\n          <MaterialTable \n          data={this.state.companies}\n          onRowClick={(evt, row) => {\n              this.setState({ selectedRow: row });\n              {this.state.selectedRow===row&&this.setState({selectedRow: null})}\n            }}\n            options={{\n                sorting: true,\n                search: false,\n                rowStyle: (rowData) => ({\n                    backgroundColor:\n                    this.state.selectedRow === rowData ? \"#67aeae\" : \"#FFF\",\n                }),\n            }}\n            localization={{body: {editRow:{deleteText:\"Are you sure you want to this company from the database?\"}}}}\n            title=\"Companies\"\n            columns={[\n                { title: 'ID', field: 'id'},\n                { title: 'Name', field: 'name' },\n                { title: 'Email', field: 'email' },\n                { title: 'Password', field: 'password' },\n                \n            ]} \n            \n            editable={{\n                onRowAdd: newData =>\n                new Promise<void>((resolve, reject) => {\n                    \n                    this.onAdd(newData);\n                    \n                    resolve(); \n                }),\n                \n                onRowUpdate: (newData, oldData) =>\n                new Promise<void>((resolve, reject) => {\n                    this.onEdit(newData, oldData);\n                    resolve();      \n                    \n                }),\n                onRowDelete: oldData =>\n                new Promise<void>((resolve, reject) => {\n                    this.onDelete(oldData);\n                    resolve();\n                }),\n            }}\n            />\n        <span>\n      \n        {this.state.selectedRow && (\n            <NavLink\n            className = \"Box\"\n            to={\"/companyCard/\" + this.state.selectedRow.id}>\n           <Button className=\"CompanyButton\">\n                Show Company\n           </Button>\n         </NavLink>\n        )}\n      \n    </span>\n    </div>\n        )\n    }\n}\n\nexport default CompaniesTable;\n ","import * as React from 'react';\nimport { Button } from '@material-ui/core';\nimport CustomerModel from '../../../../Models/CustomerModel';\nimport MaterialTable from 'material-table';\nimport jwtAxios from '../../../../Services/JwtAxios';\nimport store from '../../../../Redux/Store';\nimport { UserType } from '../../../../Models/UserModel';\nimport notify from '../../../../Services/Notification';\nimport { NavLink } from 'react-router-dom';\nimport globals from '../../../../Services/Globals';\nimport {History} from \"history\";\n\ninterface CustomersTableProps{\n    history: History;\n}\n\ninterface CustomersState{\n    customers: CustomerModel[];\n    selectedRow: CustomerModel;\n}\n\nclass CustomersTable extends React.Component<CustomersTableProps, CustomersState>{\n    public constructor(props: CustomersTableProps) {\n        super(props);\n        this.state = {customers: [], selectedRow: null\n    };\n}\n   \n    public async componentDidMount(){\n        try{ \n                const response = await jwtAxios.get<CustomerModel[]>(globals.urls.getAllCustomers); \n                this.setState({customers: response.data});\n        }\n        catch (err) {\n            this.props.history.push(\"/home\")        }\n    }\n    \n    public onAdd = async (customer:CustomerModel) => {\n        try{\n            const response = await jwtAxios.post<CustomerModel>(globals.urls.addCustomer, customer);        \n            const addedCustomer = response.data;\n            const customers = [...this.state.customers];\n            customers.push(addedCustomer);\n            notify.success(\"Customer \"+customer.firstName+\" \"+customer.lastName+ \" has been successfully added to the database\")\n            this.setState({customers});    \n        }\n        catch (err){\n            notify.error(\"Error: \"+err)          \n        }\n        \n    }\n    \n    public onEdit = async(customerNew:CustomerModel, customerOld: CustomerModel)  =>{\n        try{\n            const response = await jwtAxios.put<CustomerModel>(globals.urls.updateCustomer, customerNew);\n            const updatedCustomer = response.data;\n            const customers = [...this.state.customers];\n            customers.splice(customers.indexOf(customerOld),1);\n            customers.push(updatedCustomer);\n            notify.success(\"Customer \"+customerNew.firstName+\" \"+customerOld.lastName+ \" has been successfully updated in the database\")\n            this.setState({customers});     \n        }\n        catch (err){\n            notify.error(\"Error: \"+err);   \n        }      \n    }\n    \n    public async onDelete(customer:CustomerModel) {\n        try{\n            const response = await jwtAxios.delete<CustomerModel>(globals.urls.deleteCustomer+customer.id);\n            const deletedCustomer = response.data;\n            const customers = [...this.state.customers];\n            customers.splice(customers.indexOf(deletedCustomer),1);\n            notify.success(\"Customer \"+customer.firstName+\" \"+customer.lastName+ \" has been successfully deleted from the database\")\n            this.setState({customers});   \n        }\n        catch (err){\n            notify.error(\"Error: \"+err);\n        }\n        \n    }\n    \n    public render(): JSX.Element {\n\n    {store.getState().AuthState.user.userType!==UserType.ADMIN&&\n    this.props.history.push(\"/home\")}\n\n        return (\n            <div className=\"CustomersTable\">\n\n          <MaterialTable\n          onRowClick={(evt, row) => {\n              this.setState({ selectedRow: row });\n              {this.state.selectedRow===row&&this.setState({selectedRow: null})}\n            }}\n            options={{\n                sorting: true,\n                search: false,\n                rowStyle: (rowData) => ({\n                    backgroundColor:\n                    this.state.selectedRow === rowData ? \"#67aeae\" : \"#FFF\",\n                }),\n            }}\n            localization={{body: {editRow:{deleteText:\"Are you sure you want to this customer from the database?\"}}}}\n            title=\"Customers\"\n            columns={[\n                { title: 'ID', field: 'id' },\n                { title: 'First Name', field: 'firstName' },\n                { title: 'Last Name', field: 'lastName' },\n                { title: 'Email', field: 'email' },\n                { title: 'Password', field: 'password' },\n                \n            ]}\n            \n            data={this.state.customers.sort((a,b)=>a.id-b.id)}\n            editable={{\n                onRowAdd: newData =>\n                new Promise<void>((resolve, reject) => {\n                    this.onAdd(newData);\n                    resolve();\n                }),\n                \n                onRowUpdate: (newData, oldData) =>\n                new Promise<void>((resolve, reject) => {\n                    this.onEdit(newData, oldData);\n                    resolve();  \n                }),\n                onRowDelete: oldData =>\n                new Promise<void>((resolve, reject) => {\n                    this.onDelete(oldData);\n                    resolve();\n                }),\n            }}\n            />\n              <span>\n      \n      {this.state.selectedRow && (\n          <NavLink\n          className = \"Box\"\n          to={\"/customerCard/\" + this.state.selectedRow.id}>\n         <Button className=\"CustomerButton\">\n              Show Customer\n         </Button>\n       </NavLink>\n      )}\n    \n  </span>\n            </div>\n        )\n    }\n}\n\n  export default CustomersTable\n ","import {\n\n    Button,\n  Container,\n  createStyles,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport {  Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport UserModel, { UserType } from \"../../../Models/UserModel\";\nimport { loginAction } from \"../../../Redux/AuthState\";\nimport store from \"../../../Redux/Store\";\nimport globals from \"../../../Services/Globals\";\nimport notify from \"../../../Services/Notification\";\nimport \"./Login.css\";\n\nfunction Login(): JSX.Element {\n\n  const history = useHistory(); // Redirect functions\n  const { register, handleSubmit } = useForm<UserModel>(); // UserModel is what the server\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  async function send(user: UserModel) {\n    let urlToConnect: string;\n    switch (user.userType) {\n      case \"ADMIN\":\n        urlToConnect =\n         globals.urls.loginAdmin +\n          user.email +\n          globals.urls.password+\n          user.password;\n        break;\n      case \"COMPANY\":\n        urlToConnect =\n         globals.urls.loginCompany +\n          user.email +\n          globals.urls.password +\n          user.password;\n        break;\n      case \"CUSTOMER\":\n        urlToConnect =\n         globals.urls.loginCustomer +\n          user.email +\n          globals.urls.password +\n          user.password;\n        break;\n    }\n\n    try {\n      const response = await axios.post<UserModel>(urlToConnect, user); //UserModel is the type return back from the server\n      store.dispatch(loginAction(response.data));\n      {store.getState().AuthState.user.userType===UserType.ADMIN &&\n          history.push(\"/admin/companiesTable\"); // Redirect to home on success\n        }\n        {store.getState().AuthState.user.userType===UserType.COMPANY &&\n            history.push(\"/company/couponsTable\"); // Redirect to home on success\n        }\n        {store.getState().AuthState.user.userType===UserType.CUSTOMER &&\n            history.push(\"/customer/CustomerCouponsTable\"); // Redirect to home on success \n        }\n        {store.getState().AuthState.user && notify.success(\"You are now logged in\")}\n        {!store.getState().AuthState.user && notify.error(\"Login failed: illegal credentials\")}\n  \n    } catch (err) {\n      notify.error(\"Login failed: \"+err)\n    }\n  }\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n          borderColor: \"white\",\n        },\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n          borderColor: \"#67aeae\",\n        },\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\n          {\n            borderColor: \"white\",\n          },\n        \"& .MuiOutlinedInput-input\": {\n          color: \"white\",\n          fontFamily: '\"Mukta\",sans-serif',\n        },\n\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n          color: \"white\",\n          fontFamily: '\"Mukta\",sans-serif',\n        },\n        \"& .MuiInputLabel-outlined\": {\n          color: \"white\",\n          fontFamily: '\"Mukta\",sans-serif',\n        },\n      },\n      select: {\n        width: \"40%\",\n        textAlign: \"center\",\n        margin: theme.spacing(1),\n        minWidth: 120,\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n          borderColor: \"white\",\n        },\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n          borderColor: \"#67aeae\",\n        },\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\n          {\n            borderColor: \"white\",\n          },\n        \"& .MuiOutlinedInput-input\": {\n          color: \"white\",\n          fontFamily: '\"Mukta\",sans-serif',\n        },\n\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n          color: \"white\",\n          fontFamily: '\"Mukta\",sans-serif',\n        },\n        \"& .MuiInputLabel-outlined\": {\n          color: \"white\",\n          fontFamily: '\"Mukta\",sans-serif',\n        },\n      },\n    })\n  );\n  const styleClasses = useStyles();\n\n  const selectOptions = [\n    { id: 1, label: \"ADMIN\", type: UserType.ADMIN },\n    { id: 2, label: \"COMPANY\", type: UserType.COMPANY },\n    { id: 3, label: \"CUSTOMER\", type: UserType.CUSTOMER },\n  ];\n\n  return (\n    <div className=\"Login Box\">\n      <Container className=\"login-container\">\n        <Typography variant=\"h6\">LOG IN</Typography>\n        <form onSubmit={handleSubmit(send)}>\n          <div className=\"email-container\">\n\n            <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              className={`${styleClasses.root} TextBox`}\n              inputRef={register({ required: true })}\n              type=\"email\"\n              name=\"email\"\n            />\n          </div>\n          <div className=\"password-container\">\n              \n            <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              className={`${styleClasses.root} TextBox`}\n              inputRef={register({ required: true })}\n              type={!showPassword ? \"password\" : \"text\"}\n              name=\"password\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      style={{ color: \"white\" }}\n                      onClick={handleClickShowPassword}\n                    >\n                      {!showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className=\"user-type-container\">\n            <FormControl variant=\"outlined\" className={styleClasses.select}>\n              <InputLabel>User Type</InputLabel>\n              <Select\n                label=\"User Type\"\n                onChange={(e) =>\n                  register({\n                    required: true,\n                    name: \"userType\",\n                    value: e.target.value,\n                  })\n                }\n              >\n                {selectOptions.map((option) => (\n                  <MenuItem key={option.id} value={option.type}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <br />\n          <Button type='submit'>Enter</Button>\n                </form>\n      </Container>\n    </div>\n  );\n}\n\nexport default Login;\n","import { Component } from \"react\";\nimport UserModel from \"../../../Models/UserModel\";\nimport store from \"../../../Redux/Store\";\nimport Login from \"../../AuthArea/Login/Login\";\n\nimport \"./Home.css\";\n\n\ninterface HomeState{\n    user: UserModel;\n}\n\nclass Home extends Component<{},HomeState> {\n    \n    public componentDidMount(){\n        store.subscribe(()=>\n        this.setState({user: store.getState().AuthState.user}));\n    }\n\n    public constructor(props:{}){\n        super(props);\n        this.state= {\n            user: null\n        };\n    }\n\n    \n    public render(): JSX.Element {\n        return (\n        <div className=\"Home\">\n\t\t\t{!this.state.user &&\n                <Login/>}  \n        </div>\n    );\n}\n}\n\nexport default Home;\n","import \"./Page404.css\";\n\nfunction Page404(): JSX.Element {\n    return (\n        <div className=\"Page404\">\n\t\t\t<p>The page you are looking for does not exist.</p>\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/t3otBjVZzT0?autoplay=1\" allow=\"autoplay\" title=\"Page not Found\"></iframe>\n        </div>\n    );\n}\n\nexport default Page404;\n","import { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Button,\n  Container,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { ChangeEvent, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CompanyModel from \"../../../../Models/CompanyModel\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport globals from \"../../../../Services/Globals\";\nimport jwtAxios from \"../../../../Services/JwtAxios\";\nimport notify from \"../../../../Services/Notification\";\n\nimport \"./AddCoupon.css\";\n\ninterface AddCouponProps {\n  onClose: () => void;\n}\nfunction AddCoupon(props: AddCouponProps): JSX.Element {\n  const [couponTitle, setCouponTitle] = useState(\"\");\n  const [couponDescription, setCouponDescription] = useState(\"\");\n  const [couponAmount, setCouponAmount] = useState(0);\n  const [couponPrice, setCouponPrice] = useState(0);\n  const [couponCompany, setCouponCompany] = useState<CompanyModel>(null);\n  const [couponCategory, setCouponCategory] = useState(\"\");\n  const [couponStartDate, setCouponStartDate] = useState(\"\");\n  const [couponEndDate, setCouponEndDate] = useState(\"\");\n  const [couponImageName, setCouponImageName] = useState(\"\");\n  const [couponImage, setCouponImage] = useState(null);\n\n  const handleDisable = (): boolean => {\n    if (\n      !couponTitle ||\n      couponStartDate > couponEndDate ||\n      couponPrice === 0 ||\n      couponAmount <= 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const { register, handleSubmit } = useForm<CouponModel>();\n\n  async function send(coupon: CouponModel) {\n    try {\n      const myCouponData = new FormData();\n      myCouponData.append(\"title\", coupon.title);\n      myCouponData.append(\"description\", coupon.description);\n      myCouponData.append(\"amount\", coupon.amount.toString());\n      myCouponData.append(\"price\", coupon.price.toString());\n      myCouponData.append(\"category\", coupon.category);\n      myCouponData.append(\"startDate\", coupon.startDate.toString());\n      myCouponData.append(\"endDate\", coupon.endDate.toString());\n      myCouponData.append(\"image\", coupon.image[0]);\n      const response = await jwtAxios.post<FormData>(\n        globals.urls.addCoupon,\n        myCouponData\n      );     \n      notify.success(\n        \"New coupon has been successfully added to the database\"\n      );\n    } catch (err) {\n      notify.error(\"Error: \" + err);\n    }\n  }\n\n  const categories = [\n    \"FOOD\",\n    \"ELECTRICITY\",\n    \"RESTAURANT\",\n    \"VACATION\",\n    \"LIFESTYLE_AND_HEALTH\",\n    \"CULTURE_AND_ENTERTAINMENT\",\n    \"SPORTS\",\n    \"GAMES\",\n    \"SHOPPING\",\n  ];\n\n    const handleCategory = (event: ChangeEvent<HTMLInputElement>)=> {\n        setCouponCategory(event.target.value)\n    }\n  return (\n    <Container className=\"AddCoupon\">\n      <form onSubmit={handleSubmit(send)}>\n        <Container className=\"data-fields\">\n          \n            <h2>Add Coupon</h2>\n          <TextField\n            className=\"textfield\"\n            variant=\"outlined\"\n            onChange={(e) =>\n              register({\n                type: \"text\",\n                required: true,\n                name: \"title\",\n                value: setCouponTitle(e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Title Required\" },\n              minLength: { value: 3, message: \"Coupon Title too short\" },\n            })}\n            name=\"title\"\n            label=\"Title\"\n          />\n          <TextField\n          className=\"textfield\"\n          variant=\"outlined\"\n            onChange={(e) =>\n              register({\n                type: \"text\",\n                required: true,\n                name: \"description\",\n                value: setCouponDescription(e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Description Required\" },\n            })}\n            name=\"description\"\n            label=\"Description\"\n          />\n          <br />\n          <FormControl variant=\"outlined\" className=\"textfield\">\n              <InputLabel>Category</InputLabel>\n          <Select\n           variant=\"outlined\"\n            onChange={(e) =>\n              register({\n                type: \"text\",\n                required: true,\n                name: \"category\",\n                value:e.target.value\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon must have category\" },\n            })}\n            name=\"category\"\n            label=\"Category\"\n            type=\"text\"\n          >\n              {categories.map((option) =>(\n               <MenuItem key ={option.toString()} value={option.valueOf()}>\n                   {option.replaceAll(\"_\", \" \")}\n                   </MenuItem>\n              ))}\n      \n          </Select>\n          </FormControl>\n          <br />\n\n\n          <TextField\n          className=\"textfield\"\n          variant=\"outlined\"\n            onChange={(e) =>\n              register({\n                type: \"number\",\n                required: true,\n                name: \"amount\",\n                value: setCouponAmount(+e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Amount Required\" },\n            })}\n            name=\"amount\"\n            label=\"Amount\"\n            type=\"number\"\n          />\n\n          <TextField\n            className=\"textfield\"\n            variant=\"outlined\"\n            onChange={(e) =>\n              register({\n                type: \"number\",\n                required: true,\n                name: \"price\",\n                value: setCouponPrice(+e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Price Required\" },\n            })}\n            name=\"price\"\n            type= \"number\"\n            label=\"Coupon Price\"\n          />\n        \n          <TextField\n           className=\"textfield\"\n           helperText=\"Coupon Start Date \"\n           variant=\"outlined\"\n          onChange={(e) =>\n            register({\n                type: \"date\",\n                required: true,\n                name: \"startDate\",\n                value: setCouponStartDate(e.target.value),\n            })\n        }\n        inputRef={register({\n            required: { value: true, message: \"Coupon Start Date Required\" },\n        })}\n        name=\"startDate\"\n        \n        type=\"date\"\n        />\n\n          <TextField\n          className=\"textfield\"\n          variant=\"outlined\"\n          helperText=\"Coupon end Date \"\n            onChange={(e) =>\n              register({\n                type: \"date\",\n                required: true,\n                name: \"endDate\",\n                value: setCouponEndDate(e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon End Date Required\" },\n            })}\n            name=\"endDate\"\n            type=\"date\"\n          />\n\n\n          <TextField\n          className=\"textfield\"\n          variant=\"outlined\"\n            onChange={(e) =>\n              register({\n                type: \"file\",\n                required: true,\n                name: \"image\",\n                value: setCouponImage(e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Image Required\" },\n            })}\n            name=\"image\"\n            helperText=\"Coupon Image\"\n            type=\"file\"\n          />\n        </Container>\n\n        <Button\n          onClick={props.onClose}\n          disabled={handleDisable()}\n          className=\"confirm-btn\"\n          type=\"submit\"\n          endIcon={<FontAwesomeIcon icon={faCheck} />}\n        >\n          Confirm\n        </Button>\n    \n      </form>\n    </Container>\n  );\n}\n\nexport default AddCoupon;\n\n","import {faCheck} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Button,\n  Container,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { ChangeEvent, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport globals from \"../../../../Services/Globals\";\nimport jwtAxios from \"../../../../Services/JwtAxios\";\nimport notify from \"../../../../Services/Notification\";\n\nimport \"./UpdateCoupon.css\";\n\ninterface UpdateCouponProps {\n  onClose: () => void;\n  couponToUpdate: CouponModel\n}\nfunction UpdateCoupon(props: UpdateCouponProps): JSX.Element {\n  const [couponId, setCouponId] = useState(props.couponToUpdate.id);\n  const [couponTitle, setCouponTitle] = useState(props.couponToUpdate.title);\n  const [couponDescription, setCouponDescription] = useState(props.couponToUpdate.description);\n  const [couponAmount, setCouponAmount] = useState(props.couponToUpdate.amount);\n  const [couponPrice, setCouponPrice] = useState(props.couponToUpdate.price);\n  const [couponCompany, setCouponCompany] = useState(props.couponToUpdate.company);;\n  const [couponCategory, setCouponCategory] = useState(props.couponToUpdate.category.toString());\n  const [couponStartDate, setCouponStartDate] = useState(props.couponToUpdate.startDate.toString());;\n  const [couponEndDate, setCouponEndDate] = useState(props.couponToUpdate.endDate.toString());;\n  const [couponImageName, setCouponImageName] = useState(\"\");;\n  const [couponImage, setCouponImage] = useState(null);;\n\n  const handleDisable = (): boolean => {\n    if (\n      !couponTitle ||\n       !couponCategory ||\n      couponStartDate > couponEndDate ||\n      couponPrice === 0 ||\n      couponAmount <= 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const { register, handleSubmit, errors } = useForm<CouponModel>();\n  const history =useHistory();\n  async function send(coupon: CouponModel) {\n    try {\n      const myCouponData = new FormData();\n      myCouponData.append(\"id\", props.couponToUpdate.id.toString());\n      myCouponData.append(\"title\", coupon.title);\n      myCouponData.append(\"description\", coupon.description);\n      myCouponData.append(\"amount\", coupon.amount.toString());\n      myCouponData.append(\"price\", coupon.price.toString());\n      if (coupon.category!==undefined){\n      myCouponData.append(\"category\", coupon.category);\n      }\n      else {\n          myCouponData.append(\"category\", couponCategory)\n      }\n      myCouponData.append(\"startDate\", coupon.startDate.toString());\n      myCouponData.append(\"endDate\", coupon.endDate.toString());\n      if(couponImage!=null){\n      myCouponData.append(\"image\", coupon.image[0]);\n      }\n      const response = await jwtAxios.put<FormData>(\n        globals.urls.updateCoupon,\n        myCouponData\n      );\n      const updatedCoupon = response.data;\n     \n\n      notify.success(\n        \"Coupon with id \"+props.couponToUpdate.id+\" has been successfully updated in the database\"\n      );\n      \n      \n    } catch (err) {\n      notify.error(\"Error: \" + err);\n    }\n  }\n\n  const categories = [\n    \"FOOD\",\n    \"ELECTRICITY\",\n    \"RESTAURANT\",\n    \"VACATION\",\n    \"LIFESTYLE_AND_HEALTH\",\n    \"CULTURE_AND_ENTERTAINMENT\",\n    \"SPORTS\",\n    \"GAMES\",\n    \"SHOPPING\",\n  ];\n\n    const handleCategory = (event: ChangeEvent<HTMLInputElement>)=> {\n        setCouponCategory(event.target.value)\n    }\n  return (\n    <Container className=\"UpdateCoupon\">\n      <form onSubmit={handleSubmit(send)}>\n        <Container className=\"data-fields\">\n          \n            <h2>Update Coupon</h2>\n            <h3>Coupon ID:{props.couponToUpdate.id}</h3>\n            <img  className=\"Box\" src={globals.urls.getCouponImage+props.couponToUpdate.imageName} style={{width: 250, height: 170}}/>\n          <TextField\n            className=\"textfield\"\n            variant=\"outlined\"\n            defaultValue={props.couponToUpdate.title}\n            onChange={(e) =>\n              register({\n                type: \"text\",\n                required: true,\n                name: \"title\",\n                value: setCouponTitle(e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Title Required\" },\n              minLength: { value: 3, message: \"Coupon Title too short\" },\n            })}\n            name=\"title\"\n            label=\"Title\"\n          />\n          <TextField\n          className=\"textfield\"\n          variant=\"outlined\"\n          defaultValue={props.couponToUpdate.description}\n            onChange={(e) =>\n              register({\n                type: \"text\",\n                required: true,\n                name: \"description\",\n                value: setCouponDescription(e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Description Required\" },\n            })}\n            name=\"description\"\n            label=\"Description\"\n          />\n          <br />\n          <FormControl variant=\"outlined\" className=\"textfield\">\n              <InputLabel>Category</InputLabel>\n          <Select\n           variant=\"outlined\"\n            defaultValue={props.couponToUpdate.category}\n            onChange={(e) =>\n              register({\n                type: \"text\",\n                required: true,\n                name: \"category\",\n                value:e.target.value\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon must have category\" },\n            })}\n            name=\"category\"\n            label=\"Category\"\n            type=\"text\"\n          >\n              {categories.map((option) =>(\n               <MenuItem key ={option.toString()} value={option.valueOf()}>\n                   {option.replaceAll(\"_\", \" \")}\n                   </MenuItem>\n              ))}\n      \n          </Select>\n          </FormControl>\n          <br />\n\n\n          <TextField\n          className=\"textfield\"\n        defaultValue={props.couponToUpdate.amount}\n          variant=\"outlined\"\n            onChange={(e) =>\n              register({\n                type: \"number\",\n                required: true,\n                name: \"amount\",\n                value: setCouponAmount(+e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Amount Required\" },\n            })}\n            name=\"amount\"\n            label=\"Amount\"\n            type=\"number\"\n          />\n\n          <TextField\n            className=\"textfield\"\n            variant=\"outlined\"\n        defaultValue={props.couponToUpdate.price}\n            onChange={(e) =>\n              register({\n                type: \"number\",\n                required: true,\n                name: \"price\",\n                value: setCouponPrice(+e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon Price Required\" },\n            })}\n            name=\"price\"\n            type= \"number\"\n            label=\"Coupon Price\"\n          />\n    \n\n          <TextField\n           className=\"textfield\"\n           helperText=\"Coupon Start Date \"\n        defaultValue={props.couponToUpdate.startDate}\n           variant=\"outlined\"\n          onChange={(e) =>\n            register({\n                type: \"date\",\n                required: true,\n                name: \"startDate\",\n                value: setCouponStartDate(e.target.value),\n            })\n        }\n        inputRef={register({\n            required: { value: true, message: \"Coupon Start Date Required\" },\n        })}\n        name=\"startDate\"\n        \n        type=\"date\"\n        />\n          <TextField\n          className=\"textfield\"\n          variant=\"outlined\"\n        defaultValue={props.couponToUpdate.endDate}\n          helperText=\"Coupon end Date \"\n            onChange={(e) =>\n              register({\n                type: \"date\",\n                required: true,\n                name: \"endDate\",\n                value: setCouponEndDate(e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: true, message: \"Coupon End Date Required\" },\n            })}\n            name=\"endDate\"\n            type=\"date\"\n          />\n    \n\n              <TextField\n          className=\"textfield\"\n          variant=\"outlined\"\n            onChange={(e) =>\n              register({\n                type: \"file\",\n                required: false,\n                name: \"image\",\n                value: setCouponImage(e.target.value),\n              })\n            }\n            inputRef={register({\n              required: { value: false, message: \"Coupon Image Required\" },\n            })}\n            name=\"image\"\n            helperText=\"Coupon Image\"\n            type=\"file\"\n          />\n        </Container>\n\n        <Button\n          onClick={props.onClose}\n          disabled={handleDisable()}\n          className=\"confirm-btn\"\n          type=\"submit\"\n          endIcon={<FontAwesomeIcon icon={faCheck} />}\n        >\n          Confirm\n        </Button>\n    \n      </form>\n    </Container>\n  );\n}\n\nexport default UpdateCoupon;\n","import {\n  Button,\n  Dialog,\n  IconButton,\n  Menu,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { Cancel, Search } from \"@material-ui/icons\";\nimport MaterialTable from \"material-table\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport globals from \"../../../../Services/Globals\";\nimport jwtAxios from \"../../../../Services/JwtAxios\";\nimport notify from \"../../../../Services/Notification\";\nimport { History } from \"history\";\nimport \"./CouponsTable.css\";\nimport AddCoupon from \"../AddCoupon/AddCoupon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faPlusSquare, faDotCircle, faSync, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport store from \"../../../../Redux/Store\";\nimport { UserType } from \"../../../../Models/UserModel\";\nimport UpdateCoupon from \"../UpdateCoupon/UpdateCoupon\";\nimport { resolve } from \"promise\";\n\ninterface CouponsTableProps {\n  history: History;\n\n}\n\ninterface CouponsState {\n  selectedRow: CouponModel;\n  anchorEl: any;\n  addDialog: boolean;\n  updateDialog: boolean;\n  coupons: CouponModel[];\n}\n\nclass CouponsTable extends Component<CouponsTableProps, CouponsState> {\n  public constructor(props: CouponsTableProps) {\n     \n    super(props);\n    this.state = {\n      selectedRow: null,\n      anchorEl: null,\n      addDialog: false,\n      updateDialog: false, \n      coupons: [],\n    };\n  }\n\n  public async componentDidMount() {\n    this.getCompanyCoupons();\n  }\n \n\n  public async getCompanyCoupons() {\n    try {\n      {\n        store.getState().AuthState.user.userType !== UserType.COMPANY &&\n          this.props.history.push(\"/home\");\n      }\n      const response = await jwtAxios.get<CouponModel[]>(\n        globals.urls.getCompanyCoupons\n      );\n      this.setState({ coupons: response.data });\n    } catch (err) {\n      this.setState({ coupons: [] });\n    }\n  }\n  \n  public async getByCategory(category: string) {\n    try {\n      const response = await jwtAxios.get<CouponModel[]>(\n        globals.urls.getCompanyCouponsByCategory + category\n      );\n      this.setState({ coupons: response.data });\n    } catch (err) {\n      notify.error(\"No coupons found with category \" + category);\n    }\n  }\n  public async getByMaxPrice(price: number) {\n    try {\n      const response = await jwtAxios.get<CouponModel[]>(\n        globals.urls.getCompanyCouponsByMaxPrice + price\n      );\n      this.setState({ coupons: response.data});\n    } catch (err) {\n      notify.error(\"No coupons found below max price of \" + price);\n    }\n  }\n\n\n  public async onDelete(coupon: CouponModel) {\n    try {\n      const response = await jwtAxios.delete<CouponModel>(\n        globals.urls.deleteCoupon + coupon.id\n      );\n      const deletedCoupon = response.data;\n      const couponsUpdated = [...this.state.coupons];\n     couponsUpdated.splice(\n          this.state.coupons.indexOf(deletedCoupon),\n          1\n        );\n      this.setState({ coupons: couponsUpdated });\n      notify.success(\n        \"Coupon with ID \" +\n          coupon.id +\n          \" has been successfully deleted from the database\"\n      );\n    } catch (err) {\n      notify.error(\"Error: \" + err);\n    }\n  }\n\n  public onShow = (coupon: CouponModel) => {\n    <NavLink to={\"/couponCard/\" + coupon.id} exact></NavLink>;\n    console.log(coupon);\n  };\n\n  tableRef = React.createRef();\n\n  public render(): JSX.Element {\n    const categories = [\n      \"FOOD\",\n      \"ELECTRICITY\",\n      \"RESTAURANT\",\n      \"VACATION\",\n      \"LIFESTYLE_AND_HEALTH\",\n      \"CULTURE_AND_ENTERTAINMENT\",\n      \"SPORTS\",\n      \"GAMES\",\n      \"SHOPPING\",\n    ];\n\n\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      this.setState({ anchorEl: event.currentTarget });\n    };\n\n    const handleClose = () => {\n      this.setState({ anchorEl: null });\n    };\n    let price = 0;\n    const handleOpenAddDialog = () => {\n      this.setState({ addDialog: true });\n    };\n    const handleCloseAddDialog = () => {\n        // componentDidMount();\n        this.setState({ addDialog: false });\n    };\n    const handleOpenUpdateDialog = () => {\n        // componentDidMount();\n        this.setState({ updateDialog: true });\n    };\n    const handleCloseUpdateDialog = () => {\n        this.getCompanyCoupons();\n\n      this.setState({ updateDialog: false });\n    };\n\n    return (\n      <div className=\"CouponsTable\">\n   <Button\n            className=\"Refresh Box\"\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={() => this.getCompanyCoupons()}\n            startIcon={<FontAwesomeIcon  icon={faSync} />}\n         >\n            {\" \"}\n            \n            Refresh Table\n          </Button>\n        <Dialog\n          open={this.state.addDialog === true}\n          onClose={handleCloseAddDialog}\n          >\n          <IconButton onClick={handleCloseAddDialog}>\n            <Cancel></Cancel>\n          </IconButton>{\" \"}\n          <AddCoupon  onClose={handleCloseAddDialog} />\n        </Dialog>\n        \n        <Button\n          className=\"AddCoupon Box\"\n          onClick={handleOpenAddDialog}\n          style={{color: \"antiquewhite\" }}\n          startIcon={<FontAwesomeIcon icon={faPlusSquare} />}\n          >\n          {\" \"}\n         ADD A NEW COUPON\n        </Button>\n\n        <Dialog\n          open={this.state.updateDialog === true}\n          onClose={handleCloseUpdateDialog}\n          >\n          <IconButton onClick={handleCloseUpdateDialog}>\n            <Cancel></Cancel>\n          </IconButton>{\" \"}\n          <UpdateCoupon\n            couponToUpdate={this.state.selectedRow}\n            onClose={handleCloseUpdateDialog}\n            />\n        </Dialog>\n        {this.state.selectedRow && (\n            <Button\n            className=\"UpdateCoupon Box\"\n            style={{color: \"antiquewhite\"}}\n            onClick={handleOpenUpdateDialog}\n            startIcon={<FontAwesomeIcon  icon={faEdit} />}\n            >\n            {\" \"}\n            UPDATE SELECTED COUPON\n          </Button>\n        )}\n\n       \n      \n\n        <MaterialTable\n          localization={{\n            body: {\n              editRow: {\n                deleteText:\n                  \"Are you sure you want to this coupon from the database?\",\n              },\n            },\n          }}\n          title=\"Coupons\"\n          columns={[\n            { title: \"ID\", field: \"id\" },\n            {\n              title: \"Category\",\n              field: \"category\",\n\n              editComponent: (t) => (\n                <Select\n                  value={t.value}\n                  onChange={(e) => {\n                    t.onChange(e.target.value);\n                  }}\n                >\n                  {categories.map((option) => (\n                    <MenuItem key={option.toString()} value={option.valueOf()}>\n                      {option.replaceAll(\"_\", \" \")}\n                    </MenuItem>\n                  ))}\n                </Select>\n              ),\n            },\n            { title: \"Title\", field: \"title\", width: \"10%\" },\n            { title: \"Description\", field: \"description\" },\n            { title: \"Amount\", field: \"amount\", type: \"numeric\" },\n            { title: \"Price\", field: \"price\" },\n            { title: \"Start Date\", field: \"startDate\", type: \"date\" },\n            { title: \"End Date\", field: \"endDate\", type: \"date\" },\n            {\n              title: \"Image\",\n              field: \"image\",\n              render: (rowData) => (\n                <img\n                  src={globals.urls.getCouponImage + rowData.imageName}\n                  style={{ width: 60 }}\n                />\n              ),\n\n              editComponent: (t) => (\n                <div>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    name=\"image\"\n                    onChange={(e) => {\n                      t.onChange(e.target.value);\n                    }}\n                  />\n                </div>\n              ),\n            },\n          ]}\n          data={this.state.coupons}\n   \n          onRowClick={(evt, row) => {\n            this.setState({ selectedRow: row });\n            console.log(this.state.selectedRow);\n            {\n              this.state.selectedRow === row &&\n                this.setState({ selectedRow: null });\n            }\n          }}\n          options={{\n            search: false,\n            rowStyle: (rowData) => ({\n              backgroundColor:\n                this.state.selectedRow === rowData ? \"#67aeae\" : \"#FFF\",\n            }),\n          }}\n          editable={{\n            onRowDelete: (oldData) =>\n              new Promise<void>((resolve, reject) => {\n                this.onDelete(oldData);\n                resolve();\n              }),\n          }}\n        />\n\n        <span>\n       \n    \n\n          <Button\n            className=\"SelectCategory Box\"\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            startIcon={<FontAwesomeIcon icon={faTags}/>}\n          >\n            {\" \"}\n            Show By Category\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={handleClose}\n            \n          >\n            <MenuItem onClick={() => this.componentDidMount()}>ALL</MenuItem>\n            {categories.map((option) => (\n                      <MenuItem  onClick={()=>this.getByCategory(option)} key={option.toString()} value={option.valueOf()}>\n                      {option.replaceAll(\"_\", \" \")}\n                    </MenuItem>\n                  ))}\n          </Menu>\n        </span>\n        \n        <span>\n          {this.state.selectedRow && (\n            <NavLink\n              className=\"Box\"\n              to={\"/couponCard/\" + this.state.selectedRow.id}\n            >\n              <Button className=\"CouponButton\"\n              startIcon={<FontAwesomeIcon  icon={faDotCircle} />}>Show selected Coupon</Button>\n            </NavLink>\n          )}\n        </span>\n        <br />\n        <span className=\"Textfield Box\">\n          <TextField\n            className=\"InputFindPrice\"\n            style={{ width: 320 }}\n            placeholder=\"FIND BY MAX PRICE\"\n            onChange={(e) => (price = +e.target.value)}\n            InputProps={{\n              endAdornment: (\n                <IconButton onClick={() => this.getByMaxPrice(price)}>\n                  <Search />\n                </IconButton>\n              ),\n            }}\n          >\n            Price\n          </TextField>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default CouponsTable;\n","import { Button,  } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport globals from \"../../../../Services/Globals\";\nimport jwtAxios from \"../../../../Services/JwtAxios\";\nimport notify from \"../../../../Services/Notification\";\nimport {History} from \"history\";\nimport \"./AllCouponsTable.css\";\nimport store from \"../../../../Redux/Store\";\nimport { UserType } from \"../../../../Models/UserModel\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDotCircle, faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface CouponsTableProps{\n    history: History\n}\n\ninterface CouponsState {\n  coupons: CouponModel[];\n  selectedRow: CouponModel;\n}\n\nclass AllCouponsTable extends Component<CouponsTableProps, CouponsState> {\n  public constructor(props: CouponsTableProps) {\n    super(props);\n    this.state = { coupons: [], selectedRow: null };\n  }\n\n  public async componentDidMount() {\n    try {\n        {store.getState().AuthState.user.userType!==UserType.CUSTOMER && this.props.history.push('/home')}\n      const response = await jwtAxios.get<CouponModel[]>(\n        globals.urls.getAllCoupons\n      );\n      this.setState({coupons: response.data})\n    } catch (err) {\n    this.setState({coupons: []})\n    }\n  }\n\n  public onBuy = async (coupon: CouponModel) => {\n    try {\n\n      const response = await jwtAxios.post<CouponModel>(\n        globals.urls.purchaseCoupon,\n        coupon\n      );\n      notify.success(\n        \"You successfully purchased \" + this.state.selectedRow.title + \" coupon\"\n      );\n    } catch (err) {\n      notify.error(\n        \"You cannot buy a coupon you already have\"\n      );\n    }\n  };\n\n  public render(): JSX.Element {\n     \n    return (\n      <div className=\"AllCouponsSTable\">\n        <MaterialTable\n          data={this.state.coupons.sort((a, b) => a.id - b.id)}\n          onRowClick={(evt, row) => {\n            this.setState({ selectedRow: row });\n            console.log(this.state.selectedRow);\n            {this.state.selectedRow===row&&this.setState({selectedRow: null})}\n          }}\n          options={{\n            search: false,\n            rowStyle: (rowData) => ({\n              backgroundColor:\n                this.state.selectedRow === rowData ? \"#67aeae\" : \"#FFF\",\n            }),\n          }}\n     \n          components={{\n            Action: (props) => (\n              <Button onClick={() => props.action.onClick()}>Buy</Button>\n            ),\n          }}\n          title=\"Available Coupons\"\n          columns={[\n            { title: \"ID\", field: \"id\" },\n            { title: \"Category\", field: \"category\", width:\"50%\" },\n            { title: \"Company\", field: \"company.name\" },\n            { title: \"Title\", field: \"title\" , width: \"60%\"},\n            { title: \"Description\", field: \"description\" },\n            { title: \"Price\", field: \"price\" , width: \"50%\"},\n            { title: \"Start Date\", field: \"startDate\", type: \"date\" },\n            { title: \"End Date\", field: \"endDate\", type: \"date\" },\n            { title: 'image', field: 'image', render: rowData => <img src={globals.urls.getCouponImage+rowData.imageName} style={{ width: 60,  }} /> ,\n   \n        },  \n            \n        \n          ]}\n        />\n      \n          {this.state.selectedRow && (\n              <span\n            className = \"Box\">\n            \n\n            <Button\n            className=\"CouponButton\"               \n            onClick={() => this.onBuy(this.state.selectedRow)}\n            startIcon={<FontAwesomeIcon icon={faShoppingCart}/>}>\n            Buy Coupon\n            </Button>\n            </span>\n          )}\n        \n        <span>\n          \n            {this.state.selectedRow && (\n               <NavLink \n               className = \"Coupons Box\"\n               to={\"/couponCard/\" + this.state.selectedRow.id}\n               >\n               <Button className=\"CouponButton\"\n               startIcon={<FontAwesomeIcon icon={faDotCircle}/>} >\n                    Show Coupon\n               </Button>\n             </NavLink>\n            )}\n         \n        </span>\n      </div>\n    );\n  }\n}\n\nexport default AllCouponsTable;\n","import { Button, IconButton, Menu, MenuItem, TextField } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport MaterialTable from \"material-table\";\nimport { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport globals from \"../../../../Services/Globals\";\nimport jwtAxios from \"../../../../Services/JwtAxios\";\nimport notify from \"../../../../Services/Notification\";\nimport {  faDotCircle, faTags } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {History} from \"history\";\nimport \"./CustomerCouponsTable.css\";\nimport { UserType } from \"../../../../Models/UserModel\";\nimport store from \"../../../../Redux/Store\";\n\n\ninterface CouponsTableProps{\n    history: History;\n}\n\ninterface CouponsState {\n    coupons: CouponModel[];\n    selectedRow: CouponModel;\n    anchorEl: any;\n  }\n  \n  class CustomerCouponsTable extends Component<CouponsTableProps, CouponsState> {\n    public constructor(props: CouponsTableProps) {\n      super(props);\n      this.state = { coupons: [], selectedRow: null, anchorEl: null };\n    }\n  \n  public async componentDidMount() {\n    try {\n        {store.getState().AuthState.user.userType!==UserType.CUSTOMER && this.props.history.push('/home')}\n      const response = await jwtAxios.get<CouponModel[]>(\n          globals.urls.getCustomerCoupons\n          );\n          this.setState({coupons: response.data})\n    } catch (err) {\n            this.setState({coupons: []})\n    }\n  }\n\n  \n\n  public async getByCategory(category:string){\n    try{\n        const response = await jwtAxios.get<CouponModel[]>(globals.urls.getCustomerCouponsByCategory+category);\n        this.setState({coupons: response.data})    }\n    catch (err) {\n        notify.error(\"You have no coupons of category \"+category)\n    }\n}\npublic async getByMaxPrice(price:number){\n    try{\n        const response = await jwtAxios.get<CouponModel[]>(globals.urls.getCustomerCouponsByMaxPrice+price);\n            this.setState({coupons: response.data})\n    }\n    catch (err) {\n        notify.error(\"You have no coupons below max price of \"+price)\n    }\n}\n\n\n\n\n  public render(): JSX.Element {\n    \n    const categories = [\"FOOD\", \"ELECTRICITY\", \"RESTAURANT\", \"VACATION\", \"LIFESTYLE_AND_HEALTH\", \"CULTURE_AND_ENTERTAINMENT\",\"SPORTS\", \"GAMES\", \"SHOPPING\"]\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        this.setState({anchorEl:event.currentTarget});\n      };\n    \n      const handleClose = () => {\n        this.setState({anchorEl:null});\n      };\n    let price = 0;return (\n        <div className=\"CustomerCouponsTable\">\n\n      <MaterialTable\n           data={this.state.coupons.sort((a, b) => a.id - b.id)}\n           onRowClick={(evt, row) => {\n             this.setState({ selectedRow: row });\n             console.log(this.state.selectedRow);\n             {this.state.selectedRow===row&&this.setState({selectedRow: null})}\n           }}\n           options={{\n             search: false,\n             rowStyle: (rowData) => ({\n               backgroundColor:\n                 this.state.selectedRow === rowData ? \"#67aeae\" : \"#FFF\",\n             }),\n           }}\n        \n        title=\"My Coupons\"\n        columns={[\n            { title: \"ID\", field: \"id\" },\n            { title: \"Category\", field: \"category\", width:\"50%\" },\n            { title: \"Company\", field: \"company.name\" },\n            { title: \"Title\", field: \"title\" , width: \"60%\"},\n            { title: \"Description\", field: \"description\" },\n            { title: \"Price\", field: \"price\" , width: \"50%\"},\n            { title: \"Start Date\", field: \"startDate\", type: \"date\" },\n            { title: \"End Date\", field: \"endDate\", type: \"date\" },\n            { title: 'image', field: 'image', render: rowData => <img src={globals.urls.getCouponImage+rowData.imageName} style={{ width: 60,  }} /> ,\n        },  \n            \n          ]}\n        />\n            <span>\n                       <Button className=\"SelectCategory Box\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} \n                         startIcon={<FontAwesomeIcon icon={faTags}/>} > Show By Category\n                       </Button>\n                       <Menu\n          id=\"simple-menu\"\n          anchorEl={this.state.anchorEl}\n          keepMounted\n          open={Boolean(this.state.anchorEl)}\n          onClose={handleClose}\n          \n        >\n          <MenuItem onClick={()=>this.componentDidMount()}>ALL</MenuItem>    \n          {categories.map((option) => (\n                            <MenuItem  onClick={()=>this.getByCategory(option)} key={option.toString()} value={option.valueOf()}>\n                              {option.replaceAll(\"_\", \" \")}\n                            </MenuItem>\n                          ))}\n         \n        </Menu>\n        \n                </span>\n      <span>\n      <b>\n        {this.state.selectedRow && (\n            <NavLink\n            className = \"Box\"\n            to={\"/couponCard/\" + this.state.selectedRow.id}>\n           <Button className=\"CouponButton\"\n           startIcon={<FontAwesomeIcon  icon={faDotCircle} />}>Show selected Coupon</Button>\n         </NavLink>\n        )}\n      </b>\n    </span>\n        <br/>\n          <span className=\"Textfield Box\">\n                <TextField\n                style={{width:320}}\n                className=\"InputFindPrice\" \n                placeholder=\"FIND BY MAX PRICE\" \n                onChange={((e)=>price=+e.target.value)} \n                InputProps={{endAdornment:<IconButton onClick={()=>this.getByMaxPrice(price)}><Search/></IconButton>}}\n                >Price</TextField> \n        </span>\n        </div>\n      \n    );\n  }\n}\n\nexport default CustomerCouponsTable;\n","import { Link } from \"react-router-dom\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport \"./CouponCard.css\";\nimport { Button, Dialog, IconButton } from \"@material-ui/core\";\nimport { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport jwtAxios from \"../../../../Services/JwtAxios\";\nimport store from \"../../../../Redux/Store\";\nimport { UserType } from \"../../../../Models/UserModel\";\nimport globals from \"../../../../Services/Globals\";\nimport notify from \"../../../../Services/Notification\";\nimport { Cancel } from \"@material-ui/icons\";\nimport UpdateCoupon from \"../../../UserArea/CompanyArea/UpdateCoupon/UpdateCoupon\";\n\ninterface RouteParams {\n  id: string;\n}\n\ninterface CouponCardProps extends RouteComponentProps<RouteParams> {}\n\ninterface CouponCardState {\n  coupon: CouponModel;\n  customerCoupons: CouponModel[];\n  updateDialog: boolean;\n  pic: string;\n}\n\nclass CouponCard extends Component<CouponCardProps, CouponCardState> {\n  public constructor(props: CouponCardProps) {\n    super(props);\n    this.state = {\n      coupon: null,\n      updateDialog: false,\n      pic: null,\n      customerCoupons: []\n    };\n  }\n\n  public async componentDidMount() {\n    try {\n      {\n        !store.getState().AuthState.user && this.props.history.push(\"/home\");\n      }\n      const id = this.props.match.params.id;\n\n      let url = \"\";\n      if (store.getState().AuthState.user.userType === UserType.COMPANY) {\n        url = globals.urls.getOneCouponCompany;\n        const response = await jwtAxios.get<CouponModel>(url + id);\n        this.setState({ coupon: response.data });\n      }\n      if (store.getState().AuthState.user.userType === UserType.CUSTOMER) {\n        url = globals.urls.getOneCouponCustomer;\n        const responseArray = await jwtAxios.get<CouponModel[]>(\n          globals.urls.getCustomerCoupons\n        );\n        const response = await jwtAxios.get<CouponModel>(url + id);\n        this.setState({\n          coupon: response.data,\n          customerCoupons: responseArray.data,\n        });\n      }\n\n    } catch (err) {\n      alert(\"Error: \" + err.message);\n    }\n  }\n\n  public onBuy = async (coupon: CouponModel) => {\n    try {\n\n      const response = await jwtAxios.post<CouponModel>(\n        globals.urls.purchaseCoupon,\n        coupon\n      );\n      notify.success(\n        \"You successfully purchased \" + this.state.coupon.title + \" coupon\"\n      );\n    } catch (err) {\n      notify.error(\"You cannot buy a coupon you already have\");\n    }\n  };\n\n  public render(): JSX.Element {\n\n    const handleOpenUpdateDialog = () => {\n      this.setState({ updateDialog: true });\n    };\n    const handleCloseUpdateDialog = () => {\n      this.setState({ updateDialog: false });\n    };\n\n    return (\n      <div className=\"CouponCard Box\">\n        {this.state.coupon && (\n          <>\n            <h1>{this.state.coupon.title}</h1>\n            <img\n              style={{ width: 450, height: 300 }}\n              src={globals.urls.getCouponImage + this.state.coupon.imageName}\n            />\n            <h3>Description: {this.state.coupon.description}</h3>\n            <h3>Company: {this.state.coupon.company.name}</h3>\n            <h3>Price: {this.state.coupon.price}</h3>\n            {store.getState().AuthState.user.userType === UserType.COMPANY && (\n              <h3>Amount: {this.state.coupon.amount}</h3>\n            )}\n            <h3>Coupon Start Date: {this.state.coupon.startDate}</h3>\n            <h3>Coupon End Date: {this.state.coupon.endDate}</h3>\n            <br />\n            <br />\n          </>\n        )}\n\n\n        <span className=\"buttons\">\n          {store.getState().AuthState.user.userType === UserType.CUSTOMER &&\n            !this.state.customerCoupons.includes(this.state.coupon) && (\n              <Button\n                style={{\n                  fontSize: \"small\",\n                  background: \"black\",\n                  color: \"antiquewhite\",\n                }}\n                className=\"box\"\n                onClick={() => this.onBuy(this.state.coupon)}\n              >\n                BUY THIS COUPON\n              </Button>\n            )}\n\n          {store.getState().AuthState.user.userType === UserType.COMPANY && (\n            <Button\n              style={{\n                fontSize: \"small\",\n                background: \"black\",\n                color: \"antiquewhite\",\n              }}\n              className=\"box\"\n              component={Link}\n              to=\"/company/couponsTable\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              BACK\n            </Button>\n          )}\n          <Dialog\n            open={this.state.updateDialog === true}\n            onClose={handleCloseUpdateDialog}\n          >\n            <IconButton onClick={handleCloseUpdateDialog}>\n              <Cancel></Cancel>\n            </IconButton>{\" \"}\n            <UpdateCoupon\n              couponToUpdate={this.state.coupon}\n              onClose={handleCloseUpdateDialog}\n            />\n          </Dialog>\n\n          {store.getState().AuthState.user.userType === UserType.COMPANY && (\n            <Button\n              className=\"couponUpdate\"\n              style={{ color: \"antiquewhite\", fontSize: \"small\" }}\n              onClick={handleOpenUpdateDialog}\n              startIcon={<FontAwesomeIcon icon={faEdit} />}\n            >\n              UPDATE COUPON\n            </Button>\n          )}\n\n          {store.getState().AuthState.user.userType === UserType.CUSTOMER && (\n            <Button\n              style={{\n                fontSize: \"small\",\n                background: \"black\",\n                color: \"antiquewhite\",\n              }}\n              className=\"box\"\n              component={Link}\n              to=\"/customer/allCouponsTable\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              BACK TO ALL COUPONS\n            </Button>\n          )}\n          \n          {store.getState().AuthState.user.userType === UserType.CUSTOMER && (\n            <Button\n              style={{\n                fontSize: \"small\",\n                background: \"black\",\n                color: \"antiquewhite\",\n              }}\n              className=\"box\"\n              component={Link}\n              to=\"/customer/CustomerCouponsTable\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              BACK TO MY COUPONS\n            </Button>\n          )}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default CouponCard;\n","import { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport CompanyModel from \"../../../../Models/CompanyModel\";\nimport { UserType } from \"../../../../Models/UserModel\";\nimport store from \"../../../../Redux/Store\";\nimport globals from \"../../../../Services/Globals\";\nimport jwtAxios from \"../../../../Services/JwtAxios\";\nimport \"./CompanyCard.css\";\n\ninterface RouteParams {\n    id: string;\n  }\n\ninterface CompanyCardProps extends RouteComponentProps<RouteParams> {}\n\n\ninterface CompanyCardState {\n  company: CompanyModel;\n}\n\nclass CompanyCard extends Component<CompanyCardProps, CompanyCardState>{\n    public constructor(props:CompanyCardProps){\n        super(props);\n        this.state = {company: null}; \n    }\n    \n    public async componentDidMount() {\n        try {\n            const id = this.props.match.params.id;\n            let url = \"\";\n            if (store.getState().AuthState.user.userType===UserType.COMPANY){\n            url = globals.urls.getCompanyDetails;\n            }\n            if (store.getState().AuthState.user.userType===UserType.ADMIN){\n            url = globals.urls.getOneCompany+id;\n            }\n      const response = await jwtAxios.get<CompanyModel>(url);\n      this.setState({company : response.data});\n      console.log(this.state);\n        }\n        catch (err) {\n            alert(\"Error: \" +err.message);\n        }\n  }\n\n\n\n\n\n\npublic render(): JSX.Element {\n    return (\n        \n        <div className=\"CompanyCard Box\">\n             {this.state.company &&\n             <>\n        <h1>{this.state.company.name}</h1>\n        <h3>Email: {this.state.company.email}</h3>\n        <h3>Password: {this.state.company.password}</h3>\n\n        </>  }\n        <span>\n\n{store.getState().AuthState.user.userType===UserType.COMPANY && \n<NavLink style={{   fontSize:\"small\",\n                   background:\"black\",\n                   color: \"antiquewhite\"\n                                }}\n    className=\"box\" to=\"/company/couponsTable\">BACK TO COUPONS TABLE</NavLink>}\n{store.getState().AuthState.user.userType===UserType.ADMIN && \n<NavLink style={{\n                   fontSize:\"small\",\n                   background:\"black\",\n                   color: \"antiquewhite\"\n                                }}\n    className=\"box\" to=\"/admin/companiesTable\">BACK TO ALL COMPANIES</NavLink>}\n\n    </span>\n\n        </div>\n    );\n}\n\n}\nexport default CompanyCard;\n","import { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport CustomerModel from \"../../../../Models/CustomerModel\";\nimport { UserType } from \"../../../../Models/UserModel\";\nimport store from \"../../../../Redux/Store\";\nimport globals from \"../../../../Services/Globals\";\nimport jwtAxios from \"../../../../Services/JwtAxios\";\nimport \"./CustomerCard.css\";\ninterface RouteParams {\n    id: string;\n  }\n\ninterface CustomerCardProps extends RouteComponentProps<RouteParams> {}\n\n\ninterface CustomerCardState {\n  customer: CustomerModel;\n}\n\nclass CustomerCard extends Component<CustomerCardProps, CustomerCardState>{\n    public constructor(props:CustomerCardProps){\n        super(props);\n        this.state = {customer: null}; \n    }\n    \n    public async componentDidMount() {\n        try {\n            const id = this.props.match.params.id;\n            let url = \"\";\n            if (store.getState().AuthState.user.userType===UserType.CUSTOMER){\n            url = globals.urls.getCustomerDetails;\n            }\n            if (store.getState().AuthState.user.userType===UserType.ADMIN){\n            url = \"http://localhost:8080/admin/getOneCustomer?id=\"+id;\n            }\n      const response = await jwtAxios.get<CustomerModel>(url);\n      this.setState({customer : response.data});\n        }\n        catch (err) {\n            alert(\"Error: \" +err.message);\n        }\n  }\n\n\n\n\n\n\npublic render(): JSX.Element {\n    return (\n        \n        <div className=\"CompanyCard Box\">\n             {this.state.customer &&\n             <>\n        <h1>{this.state.customer.firstName+\" \"+this.state.customer.lastName}</h1>\n        <h3>Email: {this.state.customer.email}</h3>\n        <h3>Password: {this.state.customer.password}</h3>\n\n        </>  }\n        <span>\n\n{store.getState().AuthState.user.userType===UserType.CUSTOMER && \n<NavLink style={{   fontSize:\"small\",\n                   background:\"black\",\n                   color: \"antiquewhite\"\n                                }}\n    className=\"box\" to=\"/customer/CustomerCouponsTable\">BACK TO MY COUPONS</NavLink>}\n{store.getState().AuthState.user.userType===UserType.ADMIN && \n<NavLink style={{\n                   fontSize:\"small\",\n                   background:\"black\",\n                   color: \"antiquewhite\"\n                                }}\n    className=\"box\" to=\"/admin/customersTable\">BACK TO ALL CUSTOMERS</NavLink>}\n\n    </span>\n\n        </div>\n    );\n}\n\n}\nexport default CustomerCard;\n","import { Redirect, Route, Switch } from \"react-router\";\nimport CompaniesTable from \"../../UserArea/AdminArea/CompaniesTable/CompaniesTable\";\nimport CustomersTable from \"../../UserArea/AdminArea/CustomersTable/CustomersTable\";\n\n\nimport Home from \"../../HomeArea/Home/Home\";\nimport AdminMenu from \"../../MenuArea/AdminMenu/AdminMenu\";\nimport CompanyMenu from \"../../MenuArea/CompanyMenu/CompanyMenu\";\nimport CustomerMenu from \"../../MenuArea/CustomerMenu/CustomerMenu\";\nimport Page404 from \"../../SharedArea/Page404/Page404\";\nimport CouponsTable from \"../../UserArea/CompanyArea/CouponsTable/CouponsTable\";\nimport AllCouponsTable from \"../../UserArea/CustomerArea/CouponsTable/AllCouponsTable\";\nimport CustomerCouponsTable from \"../../UserArea/CustomerArea/CustomerCouponsTable/CustomerCouponsTable\";\nimport CouponCard from \"../../SharedArea/CardArea/CouponCard/CouponCard\";\nimport CompanyCard from \"../../SharedArea/CardArea/CompanyCard/CompanyCard\";\nimport CustomerCard from \"../../SharedArea/CardArea/CustomerCard/CustomerCard\";\n\n\nfunction Routing(): JSX.Element {\n    return (\n        <div className=\"Routing\">\n\t\t\t <Switch>\n               <Route path=\"/home\" component={Home} exact/>     \n               <Route path=\"/admin/menu\" component={AdminMenu} exact/>\n               <Route path=\"/admin/companiesTable\" component={CompaniesTable} exact/>\n               <Route path=\"/admin/customersTable\" component={CustomersTable} exact/>\n               <Route path=\"/company/menu\" component={CompanyMenu} exact/>\n               <Route path=\"/customer/menu\" component={CustomerMenu} exact/>\n               <Route path=\"/company/couponsTable\" component={CouponsTable} exact/>\n               <Route path=\"/customer/allCouponsTable\" component={AllCouponsTable} exact/>\n               <Route path=\"/customer/CustomerCouponsTable\" component={CustomerCouponsTable} exact/>\n               <Route path=\"/couponCard/:id\" component={CouponCard} exact/>\n               <Route path=\"/companyCard/\" component={CompanyCard} exact/>\n               <Route path=\"/companyCard/:id\" component={CompanyCard} exact/>\n               <Route path=\"/customerCard/\" component={CustomerCard} exact/>\n               <Route path=\"/customerCard/:id\" component={CustomerCard} exact/>\n           \n \n\n\n               <Redirect from=\"/\" to=\"/home\" exact/>\n               <Route component = {Page404} />\n\n           </Switch>\n        </div>\n    );\n}\n\nexport default Routing;\n","\nimport './Layout.css';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport Routing from '../Routing/Routing';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        'Zen Dots',\n        'cursive',\n      ].join(','),\n      fontSize: 18,\n      \n    },});\n\n\nfunction Layout() {\n  return (\n      <ThemeProvider theme={theme}>\n\n     \n\n    <div className=\"Layout\">\n        <BrowserRouter>\n        <header>\n            <Header/>\n        </header>\n\n        <main>\n            <Routing/>\n        </main>\n\n        <footer>\n            <Footer/>\n        </footer>\n\n        </BrowserRouter>\n    \n    </div>\n      </ThemeProvider>\n    \n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/LayoutArea/Layout/Layout';\nimport reportWebVitals from './reportWebVitals';\nimport Home from './Components/HomeArea/Home/Home';\nimport Layout from './Components/LayoutArea/Layout/Layout';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}